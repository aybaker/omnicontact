# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python
stages:
  - test
  - build
  - deploy

test:
  stage: test
  image: freetechsolutions/python-flake8:3.6
  # Pick zero or more services to be used on all builds.
  # Only needed when using a docker container to run your tests in.
  # Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
  services:
    - name: freetechsolutions/postgresql:11
      alias: plpython
    - redis
  # This folder is cached between builds
  # http://docs.gitlab.com/ce/ci/yaml/README.html#cache
  cache:
    paths:
      - /root/.cache/pip/
  before_script:
    - mkdir -p /opt/omnileads/ominicontacto/
    - touch /opt/omnileads/ominicontacto/django.log
    - mkdir -p /opt/omnileads/static
    - mkdir -p /opt/omnileads/media_root
    - pip install -r requirements/tests.txt
  variables:
    POSTGRES_DB: omnileads
    POSTGRES_USER: omnileads
    POSTGRES_PASSWORD: omnileadsrw
    DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB"
    DJANGO_SETTINGS_MODULE: "ominicontacto.settings.gitlab"
  script:
    - python checks.py
    - bash check-js.sh
    - flake8
    - python manage.py test --failfast
    - python manage.py compilemessages
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_REF_NAME == "/^pre-release-.*$/"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"

docker-prodenv-build-push:
  stage: build
  script:
    - bash /home/ftsinfra/git_cleanup.sh
    - cd /home/ftsinfra/ominicontacto/deploy/vagrant
    - python edit_inventory.py -tag=$CI_COMMIT_REF_NAME -dlu=$DOCKER_LOGIN_USER -dle=$DOCKER_LOGIN_EMAIL -dlp=$DOCKER_LOGIN_PASSWORD
    - cd /home/ftsinfra/ominicontacto/deploy/ansible
    - echo "$FTSINFRA_PASS" | sudo -S ./deploy.sh --docker-build
  tags:
    - build-docker
  rules:
    - if: $CI_COMMIT_REF_NAME == "/^pre-release-.*$/"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
