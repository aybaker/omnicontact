; Copyright (C) 2018 Freetech Solutions

; This file is part of OMniLeads

; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.

; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.

; You should have received a copy of the GNU General Public License
; along with this program.  If not, see http://www.gnu.org/licenses/.

;
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML     WARNING WARNING WARNING     OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML     WARNING WARNING WARNING     OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML     WARNING WARNING WARNING     OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

;-----------------------------------------------------------------------------------------------------------;
; Do NOT edit this file as it is auto-generated by OMniLeads. All modifications to this file must be done 	;
; via the web gui. There are alternative files to make custom modifications, details at: 					;
; http://omnileads.net/configuration_files       															;
;-----------------------------------------------------------------------------------------------------------;

; Variables OML:
; OMLCAMPID = id de la campaña
; OMLCAMPQNAME = queue name de la cola de la campaña
; OMLCALLTYPE = phoneJS | dialerCall | preview | c2c-agendas | c2c-calificafiones | c2c-click2call
; OMLCALLTYPEID = 1 MANUALCALL | 2 DIALER | 3 INBOUND | 4 PREV | 5 ICS | 7 INTERNAL | 8 BLIND TRANSFER | 9 CONSULT TRANSFER
; OMLAGENTSIP = numero SIP del agente
; OMLAGENTID = OML-Ap ID-pk agente
; OMLAGENTNAME = callerid name del agente
; OMLCODCLI = id del contacto asociado a la llamada
; OMLMANUALCALLTYPEID = 1 | 2 | 3 | 4 (es el tipo de c2c, agendas, contactos, )
; OMLOUTNUM = el numero EXTERNO (que debe ser enrutado) discado
; BLACKLIST creada por sub-oml-blacklist. 1 true, 0 false.
; OMLRECFILENAME = nombre del archivo que contiene la grabacion de la llamada

; OMLRECTHISCALL = 1 yes | 0 no

; GM global variable to store the answer results
; ST timestamp que indica los ENTERQUEUE

; OMLCALLTYPE = phoneJS | dialerCall | c2c-preview | c2c-agendas | c2c-calificafiones | c2c-click2call
; OMLCALLTYPEID = 1 MANUALCALL | 2 DIALER | 3 IN | 4 PREV


; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         LLAMADAS INTERNAS           OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[oml-dial-internal]
; llamadas hacia un agente, phoneJS disca AGENT o CAMP pero añade como HEADER el id de agente o campaña que hay que llamar

include => oml-dial-internal-custom

exten => AGENT,1,Verbose(2, call to agent ${SIP_HEADER(agentCall)})
same => n,Gosub(sub-oml-dial-internal,s,1(1,agentCall))

exten => CAMP,1,Verbose(2, call to campaign ${SIP_HEADER(campCall)})
same => n,Gosub(sub-oml-dial-internal,s,1(22,campCall))

; Blind Transfer Ag2Ag
exten => _0000X,1,Verbose(2, ag2agBlindTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-blind-transfer,s,1(${EXTEN:4}))
exten => _0000XX,1,Verbose(2, ag2agBlindTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-blind-transfer,s,1(${EXTEN:4}))
exten => _0000XXX,1,Verbose(2, agBlindTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-blind-transfer,s,1(${EXTEN:4}))
exten => _0000XXXX,1,Verbose(2, agBlindTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-blind-transfer,s,1(${EXTEN:4}))

; Consult Transfer Ag2Ag
exten => _1111X,1,Verbose(2, ag2agConsultTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-consult-transfer,s,1(${EXTEN:4}))
exten => _1111XX,1,Verbose(2, ag2agConsultTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-consult-transfer,s,1(${EXTEN:4}))
exten => _1111XXX,1,Verbose(2, ag2agConsultTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-consult-transfer,s,1(${EXTEN:4}))
exten => _1111XXXX,1,Verbose(2, ag2agConsultTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2ag-consult-transfer,s,1(${EXTEN:4}))

; Blind Transfer Ag2Camp
exten => _9999X,1,Verbose(2, ag2CampTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2camp-transfer,s,1(${EXTEN:4}))
exten => _9999XX,1,Verbose(2, ag2CampTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2camp-transfer,s,1(${EXTEN:4}))
exten => _9999XXX,1,Verbose(2, ag2CampTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2camp-transfer,s,1(${EXTEN:4}))
exten => _9999XXXX,1,Verbose(2, ag2CampTransfer ${EXTEN:4})
same => n,Gosub(sub-oml-ag2camp-transfer,s,1(${EXTEN:4}))


; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         LLAMADAS SALIENTES          OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[oml-dial-out]
include => oml-dial-out-custom

exten => _X.,1,Verbose(2, Welcome to OMniLeads Contact Center - "Nadie se baña en el rio dos veces porque todo cambia en el rio y en el que se baña" - Heraclito de Efeso)

same => n,Set(EXTEN=${FILTER(0-9,${EXTEN})})
same => n,Gosub(sub-oml-out-check-set,s,1(${EXTEN}))

same => n,Verbose(2, sub return 1: idCamp ${OMLCAMPID}, queue ${OMLCAMPQNAME}, callType ${OMLCALLTYPE}, campType ${OMLCALLTYPEID})
same => n,Verbose(2, sub return 2: agentSIP ${OMLAGENTSIP}, agentName ${OMLAGENTNAME}, idClient ${OMLCODCLI})

same => n,Gosub(sub-oml-blacklist,s,1(${OMLOUTNUM},${OMLCALLTYPEID},${OMLCAMPID}))

same => n(goCampContext),Set(__OMLRECDIR=${STRFTIME(${EPOCH},,%C%y-%m-%d)})
same => n,Gosub(sub-oml-campaign-${OMLCALLTYPEID},s,1)
same => n,Gosub(sub-oml-hangup,s,1)



; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         LLAMADAS ENTRANTES      OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[oml-dial-in]
include => oml-dial-in-custom

exten => _X.,1,Verbose(2, welcome OML inbound calls)
;same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-1,s,1(inboundCall))
; security checks
same => n,Set(OMLINRID=${DB(OML/INR/${EXTEN}/ID)})
same => n,GotoIf($["${OMLINRID}" != ""]?inrOk)
same => n,Playback(pbx-invalid)
same => n,Gosub(sub-oml-hangup,s,1(IN-R fail))

same => n(inrOk),Set(OMLINRNAME=${DB(OML/INR/${EXTEN}/NAME)})
same => n,Set(OMLINRDST=${DB(OML/INR/${EXTEN}/DST)})
same => n,Set(__OMLOUTNUM=${CALLERID(num)})
same => n,Set(__OMLRECDIR=${STRFTIME(${EPOCH},,%C%y-%m-%d)})
same => n,Gosub(sub-oml-dst-switch,s,1(${OMLINRDST}))
same => n,Gosub(sub-oml-hangup,s,1(IN-R fail))



; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML         LLAMADAS CLICK2CALL & PREVIEW   OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[click2call]
; conexto invocado por los Originate click2call por DJANGO

include => click2call-custom

exten => _XXXX,1,NoOp(llamada de click2call)

same => n,ExecIf($["${origin}" == "preview"]?Set(__OMLC2CHEADER=CLICK2CALLPREVIEW):Set(__OMLC2CHEADER=CLICK2CALL))
same => n,ExecIf($["${origin}" == "preview"]?Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-6,s,1):Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-7,s,1))
same => n,ExecIf($["${origin}" == "preview"]?Set(__OMLC2CCONNECT=previewCall):Set(__OMLC2CCONNECT=click2Call))
same => n,ExecIf($["${origin}" == "preview"]?Set(__OMLCALLTYPEID=4):Set(__OMLCALLTYPEID=1))
same => n,ExecIf($["${origin}" == "preview"]?Set(__OMLCALLTYPE=previewCall):Set(__OMLCALLTYPE=click2Call))

same => n,SIPAddHeader(Origin:${OMLC2CHEADER})
same => n,SIPAddHeader(IDCliente:${codCli})
same => n,SIPAddHeader(IDCamp:${IdCamp})
same => n,Set(__OMLOUTNUM=${CALLERID(num)})
same => n,Set(__OMLAGENTID=${CUT(FTSAGENTE,_,1)})
same => n,Set(__OMLCAMPID=${IdCamp})
same => n,Set(__OMLCODCLI=${codCli})

same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCAMPID},camp))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCODCLI},client))

same => n,Set(__OMLUNIQUEID=${UNIQUEID})
same => n,Set(__OMLYEARZERO=${EPOCH})
same => n,Set(__OMLCALLSTATUS=DIAL-AGENT)
same => n,Set(__OMLMOTHERCHAN=${CHANNEL})

same => n,Gosub(sub-oml-rec-check,s,1(${OMLCAMPID}))
same => n,GotoIf($["${OMLRECTHISCALL}" == "1"]?recCall)

same => n(dial),Dial(SIP/${EXTEN},45,tTcU(sub-oml-internalcall-connect^${OMLC2CCONNECT}))
same => n,Gosub(sub-oml-hangup,s,1(FAIL FAIL FAIL - ${CONTEXT}))

same => n(recCall),Gosub(sub-oml-rec-filename,s,1(${OMLUNIQUEID},${OMLC2CCONNECT}))
same => n,Set(__OMLRECDIR=${STRFTIME(${EPOCH},,%C%y-%m-%d)})
same => n,MixMonitor(${OMLRECDIR}/${OMLRECFILENAME}.wav,b)
same => n,Goto(dial)



;  OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML  OML OML OML OML OML OMLOML OML OML OML OML OML
;  OML OML OML OML OML OML OML OML OML OML     AGENT ACTIONS DIALPLAN   OML OML OML OML OML OMLOML OML OML OML OML OML
;  OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML  OML OML OML OML OML OMLOML OML OML OML OML OML

[oml-agent-actions]
; Login
exten => 0077LOGIN,1,Verbose(2,Login de agente)
same => n,Set(MemberChannel=${CHANNEL(peername)})
same => n,Set(MemberChanType=${CHANNEL(channeltype)})
same => n,Set(AGENTNAME=${REPLACE(CALLERID(name),"'",)})
same => n,Set(OMLAGENTID=${CUT(CALLERID(name),_,1)})

same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-agent-login,s,1(${OMLAGENTID},${OMLAGENTSIP},${OMLAGENTSTATUS},phoneJS))
same => n,Hangup()

; logout
exten => 066LOGOUT,1,Verbose(2,logout desde originate)
same => n,GotoIf($["${AUTOLOGOUT}" == ""]?noauto)
same => n,Set(OMLLOGOUTTYPE=AUTOLOGOUT)
same => n,Set(AGENTE=${CUT(AUTOLOGOUT,-,1)})
same => n,Set(MemberChanType=SIP)
same => n,Set(AGENTNAME=${CUT(AUTOLOGOUT,-,2)})
same => n,Set(OMLAGENTID=${CUT(AGENTNAME,_,1)})
same => n,Goto(logoutSub)

same => n(noauto),Set(MemberChannel=${AGENTE})
same => n,Set(OMLLOGOUTTYPE=AGENTLOGOUT)
same => n,Set(MemberChanType=SIP)
same => n,Set(AGENTNAME=${AGENTNAME})
same => n,Set(OMLAGENTID=${CUT(AGENTNAME,_,1)})
same => n,Goto(logoutSub)

same => n(logoutSub),Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-agent-logout,s,1(${OMLAGENTID},${OMLAGENTSIP},${OMLAGENTSTATUS}))
same => n(hangup),Hangup()

; Pause
exten => _0077X,1,Verbose(2,Pausing member in all queues)
same => n,Set(OMLAGENTID=${CUT(CALLERID(name),_,1)})
same => n,Set(MemberChannel=${CHANNEL(peername)})
same => n,Set(MemberChanType=${CHANNEL(channeltype)})
same => n,Set(OMLPAUSEID=${EXTEN:4})
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-agent-pause,s,1(${OMLAGENTID},${OMLAGENTSIP},${OMLPAUSEID}))
same => n,Hangup()

exten => _0077XX,1,Verbose(2,Pausing member in all queues)
same => n,Set(OMLAGENTID=${CUT(CALLERID(name),_,1)})
same => n,Set(MemberChannel=${CHANNEL(peername)})
same => n,Set(MemberChanType=${CHANNEL(channeltype)})
same => n,Set(OMLPAUSEID=${EXTEN:4})
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-agent-pause,s,1(${OMLAGENTID},${OMLAGENTSIP},${OMLPAUSEID}))
same => n,Hangup()

; Unpause
exten => 0077UNPAUSE,1,Verbose(2,UnPausing member in all queues)
same => n,Set(OMLAGENTID=${CUT(CALLERID(name),_,1)})
same => n,Set(PAUSEID=${DB(OML/AGENT/${OMLAGENTID}/STATUSID)})
same => n,Set(MemberChannel=${CHANNEL(peername)})
same => n,Set(MemberChanType=${CHANNEL(channeltype)})
same => n,Set(AGENTNAME=${REPLACE(CALLERID(name),"'",)})
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-agent-unpause,s,1(${OMLAGENTID},${OMLAGENTSIP}))
same => n,Hangup()



;  OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML  OML OML OML OML OML OMLOML OML OML OML OML OML
;  OML OML OML OML OML OML OML OML OML OML     SUPERVISION DALPLAN      OML OML OML OML OML OMLOML OML OML OML OML OML
;  OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML  OML OML OML OML OML OMLOML OML OML OML OML OML

[oml-sup-actions]
exten => CHANSPY,1,Verbose(2, Channel Spy)
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,ChanSpy(SIP/${OMLAGENTSIP},sb)
same => n,Hangup()

exten => CHANSPYWISHPER,1,Verbose(2, Channel Spy and Wishper)
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,ChanSpy(SIP/${OMLAGENTSIP},swb)
same => n,Hangup()

exten => CHANCONFER,1,Verbose(2, Channel Spy and Wishper)
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,ChanSpy(SIP/${OMLAGENTSIP},swbB)
same => n,Hangup()

exten => CHANTAKECALL,1,Verbose(2, Channel Spy and Wishper)
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Transfer(SIP/${CALLERID(num)})
same => n,Hangup()

exten => AGENTPAUSE,1,Verbose(2,Pausing member in all queues)
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-agent-pause,s,1(${OMLAGENTID},${OMLAGENTSIP},00))
same => n,Hangup()

exten => AGENTUNPAUSE,1,Verbose(2,UnPausing member in all queues)
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-agent-unpause,s,1(${OMLAGENTID},${OMLAGENTSIP}))
same => n,Hangup()

exten => AGENTLOGOUT,1,Verbose(2, Logout agent)
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-agent-logout,s,1(${OMLAGENTID},${OMLAGENTSIP},${OMLAGENTSTATUS}))
same => n,Hangup()
