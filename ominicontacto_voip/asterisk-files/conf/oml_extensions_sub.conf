; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML     WARNING WARNING WARNING     OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML     WARNING WARNING WARNING     OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML     WARNING WARNING WARNING     OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

;------------------------------------------------------------------------------------------------------------------	;
;------------------------------------------------------------------------------------------------------------------	;
; Do NOT edit this file as it is auto-generated by OMniLeads.  														;
; There are alternative files to make custom modifications, details at: http://omnileads.net/configuration_files 	;
;------------------------------------------------------------------------------------------------------------------	;
;------------------------------------------------------------------------------------------------------------------	;



; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML      LLAMADAS INTERNAS      OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML      LLAMADAS INTERNAS      OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML      LLAMADAS INTERNAS      OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML


[sub-oml-dial-internal]
; subrutina para el manejo de llamadas originadas por un Agente cuyo destino es otro Agentes o una Campaña
; ARG1 es el id del agente o id de campaña, al que se desea contactar
; ARG2 es el tipo de llamada interna

exten => s,1,Verbose(2, internal calls)
same => n,Verbose(2, Un hombre con coraje externo se atreve a morir, un hombre con coraje interior se atreve a vivir)
same => n,Goto(${ARG2})
same => n,Gosub(sub-oml-hangup,s,1(FAIL FAIL FAIL -> sub-oml-dial-internal))

; Ag2Ag2 Call Ag2Ag2 Call Ag2Ag2 Call Ag2Ag2 Call Ag2Ag2 Call Ag2Ag2 Call Ag2Ag2 Call Ag2Ag2 Call
; Ag2Ag2 Call Ag2Ag2 Call Ag2Ag2 Call Ag2Ag2 Call Ag2Ag2 Call Ag2Ag2 Call Ag2Ag2 Call Ag2Ag2 Call
same => n(agentCall),Set(__OMLAGENTSIPTRANSFERDST=${DB(OML/AGENT/${ARG1}/SIP)})
same => n,Set(__OMLAGENTIDCALLED=${ARG1})
same => n,Set(__OMLAGENTSIPCALLER=${CALLERID(num)})
same => n,Set(__OMLCAMPID=${SIP_HEADER(Idcamp)})
same => n,Set(__OMLCAMPTYPE=${DB(OML/CAMP/${OMLCAMPID}/TYPE)})
same => n,Set(__OMLCAMPQNAME=${DB(OML/CAMP/${OMLCAMPID}/QNAME)})
same => n,Set(__OMLCALLTYPE=phoneJS)
same => n,Set(__OMLCALLTYPEID=7)
same => n,Set(__OMLMANUALCALLTYPEID=${SIP_HEADER(Tipocamp)})
same => n,Set(__OMLAGENTSIP=${CALLERID(num)})
same => n,Set(__OMLAGENTNAME=${CALLERID(name)})
same => n,Set(__OMLCODCLI=)
same => n,Set(__OMLAGENTID=${CUT(CALLERID(name),_,1)})
same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(internalAgentCallSrc))

same => n,Set(__ST=${EPOCH})
same => n,Set(__GM=${OMLAGENTSIP})
same => n,Set(GLOBAL(${GM})=U)
same => n,Set(GLOBAL(${GM}ans)=0)

same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=DIALING:${EPOCH})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${UNIQUEID},${OMLAGENTID},DIAL,${OMLAGENTSIPCALLED},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},,,,call))

same => n,Dial(SIP/${OMLAGENTSIPCALLED},45,tTcU(sub-oml-internalcall-connect^internalAgentCallDst^${ST}))
same => n,Gosub(sub-oml-hangup-custom,s,1)

; Ag2Camp Call Ag2Camp Call Ag2Camp Call Ag2Camp Call Ag2Camp Call Ag2Camp Call Ag2Camp Call
; Ag2Camp Call Ag2Camp Call Ag2Camp Call Ag2Camp Call Ag2Camp Call Ag2Camp Call Ag2Camp Call
same => n(campCall),Verbose(2, internal agent to queue call)
same => n,Set(__OMLCAMPID=${CUT(DB(OML/CAMP/${ARG1}/QNAME),_,1)})
same => n,Set(__OMLCALLTYPE=phoneJS)
same => n,Set(__OMLCALLTYPEID=7)
same => n,Set(__OMLMANUALCALLTYPEID=${SIP_HEADER(Tipocamp)})
same => n,Set(__OMLAGENTSIP=${CALLERID(num)})
same => n,Set(__OMLAGENTNAME=${CALLERID(name)})
same => n,Set(__OMLAGENTID=${CUT(CALLERID(name),_,1)})
same => n,Set(__OMLOUTNUM=${CALLERID(num)})
same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(internalQueueCallSrc))

same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=DIALING:${EPOCH})

same => n,SIPAddHeader(uidGrabacion:${UNIQUEID})
same => n,SIPAddHeader(Origin:${DB(OML/CAMP/${OMLCAMPID}/CALLACTION)})
same => n,SIPAddHeader(IDCliente:${OMLCODCLI})
same => n,SIPAddHeader(IDCamp:${OMLCAMPID})
same => n,SIPAddHeader(OMLOUTNUM:${OMLAGENTSIP})
same => n,Set(__OMLUNIQUEIDCHANNEL1=${UNIQUEID})

same => n,Set(__DM=${OMLCAMPID})
same => n,Set(GLOBAL(${DM}channel)=${CHANNEL})
same => n,Set(GLOBAL(${DM}enterqueue)=${EPOCH})
same => n,Set(GLOBAL(${DM})=U)
same => n,Set(GLOBAL(${DM}ans)=0)

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${UNIQUEID},${OMLAGENTID},ENTERQUEUE,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},,,,call))
same => n,Gosub(sub-oml-rec-check,s,1)
same => n,Set(__ARG1=internalQueueCallDst)
same => n,Queue(${DB(OML/CAMP/${OMLCAMPID}/QNAME)},tT,,,${DB(OML/CAMP/${OMLCAMPID}/QUEUETIME)},,,sub-oml-internalcall-connect)
same => n,Gosub(sub-oml-hangup,s,1)



; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML      TRANSFERENCIAS     OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML      TRANSFERENCIAS     OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML      TRANSFERENCIAS     OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML


[sub-oml-ag2ag-blind-transfer]
; agentTransferCall ; agentTransferCall ; agentTransferCall ; agentTransferCall ; agentTransferCall ; agentTransferCall
; agentTransferCall ; agentTransferCall ; agentTransferCall ; agentTransferCall ; agentTransferCall ; agentTransferCall
; Inboubd -> SIP/trunk....... | Manual -> | Dialer -> Local/OMLOUTNUM@from-oml......;1 | Preview ->

exten => s,1,Verbose(2, transfer call ${CHANNEL} to '${ARG1}' agent)

same => n,SIPAddHeader(Transfer:1)

same => n,Set(__OMLTRANSFERTYPE=ag2agBlindTransfer)
same => n,Set(__OMLAGENTTRANSFERDSTID=${ARG1})
same => n,Set(__OMLAGENTSIPTRANSFERDST=${DB(OML/AGENT/${ARG1}/SIP)})
same => n,Set(__OMLAGENTID=${SHARED(OMLAGENTID,${OMLMOTHERCHAN})})
same => n,Set(__OMLRECFILENAME=${SHARED(OMLRECFILENAME,${OMLMOTHERCHAN})})
same => n,Set(__TRANSFERID=8)

same => n,Set(__OMLYEARZEROTRANSFER=${EPOCH})
same => n,Set(__OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${OMLMOTHERCHAN})})
same => n,Set(__OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLANSWERTIMESTAMP,${OMLMOTHERCHAN})})
same => n,Set(__OMLCALLSTATUS=BT-TRY)
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=BT-TRY)

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID}-${OMLAGENTTRANSFERDSTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Dial(SIP/${OMLAGENTSIPTRANSFERDST},45,tTcU(sub-oml-blind-transfer-agent-connect^${OMLUNIQUEID}^${OMLAGENTID}^${OMLCAMPQNAME}^${OMLMOTHERCHAN}^${OMLYEARZEROTRANSFER}^${OMLMANUALCALLTYPEID}^${OMLAGENTSIP}^${TRANSFERID}^${OMLCAMPTYPE}))
same => n,Set(TRANSFERFAILDIALSTATUS=${DIALSTATUS})
same => n,Set(__OMLCALLSTATUS=BT-${DIALSTATUS})
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=BT-${DIALSTATUS})
same => n,Gosub(sub-oml-hangup,s,1(FAIL FAIL FAIL - oml-ag2ag-blind-transfer))


[sub-oml-ag2ag-consult-transfer]
; agentConsultTransferCall ; agentConsultTransferCall ; agentConsultTransferCall ; agentConsultTransferCall
; agentConsultTransferCall ; agentConsultTransferCall ; agentConsultTransferCall ; agentConsultTransferCall
; Inboubd -> SIP/trunk....... | Manual -> | Dialer -> | Preview ->


exten => s,1,Verbose(2, consult transfer call ${CHANNEL} to '${ARG1}' agent - ${TRANSFERERNAME})
same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(ag2agConsultTransferAux))

same => n,SIPAddHeader(Transfer:2)

same => n,Set(__OMLTRANSFERTYPE=ag2agConsultTransfer)
same => n,Set(__OMLAGENTTRANSFERDSTID=${ARG1})
same => n,Set(__OMLAGENTSIPTRANSFERDST=${DB(OML/AGENT/${ARG1}/SIP)})
same => n,Set(__OMLRECFILENAME=${SHARED(OMLRECFILENAME,${OMLMOTHERCHAN})})
same => n,ExecIf($["${OMLCAMPTYPE}" == "1"]?Set(__OMLMOTHERCHAN=${SHARED(OMLMOTHERCHAN,${TRANSFERERNAME})}))
same => n,ExecIf($["${OMLCAMPTYPE}" != "1"]?Set(__OMLAGENTID=${SHARED(OMLAGENTID,${OMLMOTHERCHAN})}))
same => n,Set(__TRANSFERID=8)

same => n,Set(__OMLYEARZEROTRANSFER=${EPOCH})
same => n,Set(__OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${OMLMOTHERCHAN})})
same => n,Set(__OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLANSWERTIMESTAMP,${OMLMOTHERCHAN})})
same => n,Set(__OMLCALLSTATUS=CT-TRY)
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=${OMLCALLSTATUS})

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID}-${OMLAGENTTRANSFERDSTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${TRANSFERID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},,call))
same => n,Dial(SIP/${OMLAGENTSIPTRANSFERDST},45,tTcU(sub-oml-consult-transfer-agent-connect^${OMLUNIQUEID}^${OMLAGENTID}^${OMLCAMPQNAME}^${OMLMOTHERCHAN}^${OMLYEARZEROTRANSFER}^${TRANSFERID}^${OMLCAMPTYPE}))
same => n,Set(__OMLCALLSTATUS=CT-${DIALSTATUS})
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=${OMLCALLSTATUS})
same => n,Gosub(sub-oml-hangup,s,1(FAIL FAIL FAIL - oml-ag2ag-blind-transfer))


[sub-oml-ag2camp-transfer]
; transferencias hacia una campaña transferencias hacia una campaña transferencias hacia una campaña
exten => s,1,Verbose(2, internal agent to queue call)
same => n,Answer()
same => n,Set(__OMLOUTNUM=${OMLOUTNUM})
same => n,Set(__OMLAGENTSIP=${OMLAGENTSIP})
same => n,ExecIf($["${OMLCALLTYPE}" == "4"]?Set(__OMLFROMAGENTID=${OMLAGENTID}):Set(__OMLFROMAGENTID=${CUT(MEMBERNAME,_,1)}))

same => n,SIPAddHeader(Transfer:3)

same => n,Set(__OMLTRANSFERTYPE=ag2CampTransfer)
same => n,Set(__OMLCAMPTRANSFERID=${ARG1})
same => n,Set(__OMLAGENTID=${SHARED(OMLAGENTID,${OMLMOTHERCHAN})})
same => n,Set(__TRANSFERID=8)

same => n,Set(__OMLYEARZEROTRANSFER=${EPOCH})
same => n,Set(__OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${OMLMOTHERCHAN})})
same => n,Set(__OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(__OMLCALLSTATUS=CAMPT-TRY)
same => n,Set(__OMLRECFILENAME=${SHARED(OMLRECFILENAME,${OMLMOTHERCHAN})})
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=${OMLCALLSTATUS})

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID}-${OMLCAMPTRANSFERID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},,call))

same => n,Set(__OMLCALLTYPE=transfer)
;same => n,Set(__OMLCALLTYPEID=8)

same => n,SIPAddHeader(uidGrabacion:${UNIQUEID})
same => n,SIPAddHeader(Origin:${DB(OML/CAMP/${OMLCAMPTRANSFERID}/CALLACTION)})
same => n,SIPAddHeader(IDCliente:${OMLCODCLI})
same => n,SIPAddHeader(IDCamp:${OMLCAMPTRANSFERID})
same => n,SIPAddHeader(OMLOUTNUM:${OMLOUTNUM})

same => n,Gosub(sub-oml-rec-check,s,1)
same => n,GotoIf($["${OMLRECFILENAME}" != ""]?queueLog)
same => n,GotoIf($["${OMLRECTHISCALL}" != "1"]?queueLog)

same => n,Gosub(sub-oml-rec-filename,s,1(${OMLUNIQUEID},inboundCall))
same => n,Set(__OMLRECDIR=${STRFTIME(${EPOCH},,%C%y-%m-%d)})
same => n,MixMonitor(${OMLRECDIR}/${OMLRECFILENAME}.wav,b)

same => n(queueLog),Gosub(sub-oml-queuelog,s,1(${OMLCAMPTRANSFERID},${OMLUNIQUEID},,ENTERQUEUE-TRANSFER,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},3,,${OMLCAMPID},${OMLAGENTID},call))
same => n,Verbose(2, ${OMLCAMPID} - ${OMLAGENTID})
same => n,Queue(${DB(OML/CAMP/${OMLCAMPTRANSFERID}/QNAME)},tTc,,,${DB(OML/CAMP/${OMLCAMPID}/QUEUETIME)},,,sub-oml-camp-transfer-connect)
same => n,Gosub(sub-oml-hangup,s,1)





; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML 		  LLAMADAS ENTRANTES          OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML 		  LLAMADAS ENTRANTES          OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML 		  LLAMADAS ENTRANTES          OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML


[sub-oml-in-check-set]
; sub-oml-in-check-set aplica a llamadas entrantes
; se reciben como parametros el id de la camp

include => sub-oml-in-check-set-custom

exten => s,1,Verbose(2, setting some channel variables)
; check si es announymus
;same => n,GotoIf($[${} == ""]?inCall)
;same => n,Playback(tt-weasels)
;same => n,Verbose(2, la llamada no es aceltada por OML)
;same => n,Gosub(sub-oml-hangup,s,1)

same => n(inCall),Verbose(2, Inbound Call Set Variables)
same => n,Set(__OMLOUTNUM=${CALLERID(num)})
same => n,Set(__OMLCAMPID=${ARG1})
same => n,Set(__OMLCAMPTYPE=${DB(OML/CAMP/${OMLCAMPID}/TYPE)})
same => n,Set(__OMLCAMPQNAME=${DB(OML/CAMP/${OMLCAMPID}/QNAME)})
same => n,Set(__OMLCALLTYPE=Inbound)
same => n,Set(__OMLCALLTYPEID=3)
same => n,Set(__OMLMANUALCALLTYPEID=)
same => n,Set(__OMLAGENTSIP=)
same => n,Set(__OMLAGENTID=)
same => n,Set(__OMLAGENTNAME=-)
same => n,Set(__OMLCODCLI=)
same => n,GotoIf($["${OMLCAMPQNAME}" != ""]?goCampContext)
same => n,Gosub(sub-oml-hangup,s,1)
same => n(goCampContext),Gosub(sub-oml-campaign-3,s,1(${OMLCAMPID}))

[sub-oml-campaign-3]
; subrutine for Inbound Calls (3)

include => sub-oml-campaign-inbound-custom

exten => s,1,Verbose(2, deliver inbound call)
same => n,Answer()
same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-1,s,1(inboundCall))
same => n,SIPAddHeader(uidGrabacion:${UNIQUEID})
;same => n,SIPAddHeader(Origin:${DB(OML/CAMP/${OMLCAMPID}/CALLAGENTACTION)})
same => n,SIPAddHeader(Origin:IN)
same => n,SIPAddHeader(IDCliente:${OMLCODCLI})
same => n,SIPAddHeader(IDCamp:${OMLCAMPID})
same => n,SIPAddHeader(OMLOUTNUM:${OMLOUTNUM})

same => n,Set(__OMLUNIQUEID=${UNIQUEID})
same => n,Set(__OMLYEARZERO=${EPOCH})
same => n,Set(__OMLCALLSTATUS=ENTERQUEUE)
same => n,Set(__OMLMOTHERCHAN=${CHANNEL})

same => n,Gosub(sub-oml-rec-check,s,1)
same => n,GotoIf($["${OMLRECTHISCALL}" != "1"]?queueLog)

same => n,Gosub(sub-oml-rec-filename,s,1(${UNIQUEID},inboundCall))
same => n,MixMonitor(${OMLRECDIR}/${OMLRECFILENAME}.wav,b)

same => n(queueLog),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},ENTERQUEUE,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},,,,call))
same => n,ExecIf($["${DB(OML/CAMP/${OMLCAMPID}/WELCOMEPLAY)}" != ""]?Background(${DB(OML/CAMP/${OMLCAMPID}/WELCOMEPLAY)}))
same => n,Queue(${DB(OML/CAMP/${OMLCAMPID}/QNAME)},tT,,,${DB(OML/CAMP/${OMLCAMPID}/QUEUETIME)},,,sub-oml-queue-inbound-connect-agent)
same => n,Gosub(sub-oml-hangup,s,1)







; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML          LLAMADAS SALIENTES         OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML          LLAMADAS SALIENTES         OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML          LLAMADAS SALIENTES         OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[sub-oml-out-check-set]
; sub-oml-outr-check-set aplica a llamadas salientes
; se reciben como parametros el id de la camp ${ARG1}
; check de HEADERS(phoneJS calls) y Channel Var (wd o c2c calls) para determinar el tipo de llamada/campaña
; Es invocada por: [oml-dial-out] (oml_extensions.conf)

include => sub-oml-out-check-set-custom

exten => s,1,Verbose(2, Se comrpueba si la llamada saliente es generada desde un OML Endpoint")
same => n,Verbose(2, vamos a analizar si se trata de una BLIND-TRANSFER hacia un OMLOUTNUM)
same => n,GotoIf($["${BLINDTRANSFER}" != ""]?transferOutCall)
same => n,Verbose(2, vamos a analizar si se trata de una CONSULT-TRANSFER hacia un OMLOUTNUM)
same => n,GotoIf($["${ATTENDEDTRANSFER}" != ""]?consultTransferOutCall)
same => n,Verbose(2, vamos a analizar si se trata de una PHONEJS Call hacia un OMLOUTNUM)
same => n,GotoIf($["${SIP_HEADER(Idcamp)}" != ""]?omlphonejscall)
same => n,Verbose(2, vamos a analizar si se trata de una CLICK2CALL hacia un OMLOUTNUM)
same => n,GotoIf($["${origin}" == "contactos" | "${origin}" == "agendas" | "${origin}" == "click2call" | "${origin}" == "calificaciones" | "${origin}" == "preview"]?click2call)
same => n,Verbose(2, vamos a analizar si se trata de una WOMBATDIALER Call hacia un OMLOUTNUM)
same => n,GotoIf($[${WOMBAT_HOPPER_ID} != ""]?wdcall)
same => n,Playback(tt-weasels)
same => n,Gosub(sub-oml-hangup,s,1(FAIL FAIL FAIL - ${CONTEXT}))

; Phone JS calls
same => n(omlphonejscall),Verbose(2, phoneJS call)
same => n,Set(__OMLCAMPID=${SIP_HEADER(Idcamp)})
same => n,Set(__OMLAGENTID=${CUT(CALLERID(name),_,1)})
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCAMPID},camp))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCODCLI},client))
same => n,Set(__OMLCALLTYPEID=1)
same => n,Set(__OMLCALLTYPE=manualCall)
same => n,Set(__OMLOUTNUM=${ARG1})
same => n,Goto(return)

; Wombat Dialer Calls
same => n(wdcall),Verbose(2, dialer call)
same => n,Set(__OMLCAMPID=${ID_CAMPANA})
same => n,Set(__OMLAGENTID=dialer-dialout)
same => n,Set(__OMLCODCLI=${ID_CLIENTE})
same => n,Set(SHARED(OMLCODCLI,${CHANNEL})=${ID_CLIENTE})
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCAMPID},camp))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCODCLI},client))
same => n,Set(__OMLAGENTSIP=-)
same => n,Set(__OMLAGENTNAME=-)
same => n,Set(__OMLDIALERCHAN=originateChannel)
same => n,Set(__OMLCALLTYPEID=2)
same => n,Set(__OMLCALLTYPE=dialerCall)
same => n,Set(__OMLOUTNUM=${ARG1})
same => n,Return()

; click2call calls
same => n(click2call),GotoIf($["${origin}" == "preview"]?preview)
same => n,Verbose(2, c2c call)
same => n,Set(__OMLCAMPID=${IdCamp})
same => n,Set(__OMLAGENTID=${CUT(CALLERID(name),_,1)})
same => n,Set(__OMLCODCLI=${codCli})
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCAMPID},camp))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCODCLI},client))
same => n,Set(__OMLCALLTYPEID=1)
same => n,Set(__OMLCALLTYPE=click2Call)
same => n,Set(__OMLOUTNUM=${ARG1})
same => n,Goto(return)

; previewCalls
same => n(preview),Verbose(2, preview call)
same => n,Set(__OMLCAMPID=${IdCamp})
same => n,Set(__OMLAGENTID=${CUT(FTSAGENTE,_,1)})
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCAMPID},camp))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCODCLI},client))
same => n,Set(__OMLCODCLI=${codCli})
same => n,Set(__OMLCALLTYPEID=4)
same => n,Set(__OMLCALLTYPE=previewCall)
same => n,Set(__OMLOUTNUM=${ARG1})
same => n,Goto(return)

; blind transfer hacia un destino externo (trunk)
same => n(transferOutCall),Verbose(2, transfer call)
same => n,Set(__OMLTRANSFERTYPE=blindTransferOutCall)
;same => n,Set(__OMLCALLTYPEID=9)
same => n,Set(__OMLCODCLI=${codCli})
same => n,Set(__OMLOUTNUMTRANSFER=${ARG1})
same => n,Goto(goCampContext)

; consult transfer hacia un destino externo (trunk)
same => n(consultTransferOutCall),Verbose(2, transfer call)
same => n,Set(__OMLTRANSFERTYPE=consultTransferOutCall)
;same => n,Set(__OMLCALLTYPEID=9)
same => n,Set(__OMLCODCLI=${codCli})
same => n,Set(__OMLOUTNUMTRANSFER=${ARG1})
same => n,Set(SHARED(OMLOUTNUMTRANSFER,${OMLMOTHERCHAN})=${ARG1})
same => n,Goto(goCampContext)

; retorno de la subrutina
same => n(return),GotoIf($["${OMLAGENTID}" != ""]?queuecheck)
same => n,Verbose(2, NO AGENT no tracking outbound)
same => n,Gosub(sub-oml-hangup,s,1(FAIL FAIL FAIL - Not OMLAGENTID set))
same => n(queuecheck),GotoIf($["${OMLCAMPID}" != ""]?goCampContext)
same => n,Verbose(2, NO QUEUE no tracking outbound)
same => n,Gosub(sub-oml-hangup,s,1(FAIL FAIL FAIL - Not OMLCAMPID set))
same => n(goCampContext),Return()


[sub-oml-campaign-1]
; esta subrutina procesa los intentos de MANUAL CALL
; Es invocada por [oml-dial-out] (oml_extensions.conf)

include => sub-oml-campaign-1-custom

exten => s,1,Verbose(2, Welcom to ${CONTEXT} - Subrutine for Manual Calls)
same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(${OMLCALLTYPE}))
; compruebo cantidad de llamadas activas concurrentes
;......
;......
;compruebo si estamos dentro de la hora establecida para llamar TC
;......
;......
;compruebo si no tengo que disparar algun AGI
;......
;......
;compruebo FLAG de ON/OFF de la campaña
;......
;......
same => n,SIPAddHeader(Origin:Manual-Call)
same => n,Set(__OMLUNIQUEID=${UNIQUEID})
same => n,Set(__OMLYEARZERO=${EPOCH})
same => n,Set(__OMLCALLSTATUS=DIAL)
same => n,Set(__OMLAGENTCHAN=${CHANNEL})

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},,,,call))
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=DIALING:${EPOCH})
same => n,Goto(oml-outr,${OMLOUTNUM},1)
same => n,Gosub(sub-oml-hangup,s,1)

[sub-oml-campaign-2]
; esta subrutina procesa los intentos de llamadas del DIALER CALLS
; la recorre los canales tipo Local/XXXXkjkajkja......;2 (es decir quien origina el Dial)
; Es invocada por [oml-dial-out] (oml_extensions.conf)

include => sub-oml-campaign-2-custom

exten => s,1,Verbose(2, ${UNIQUEID} - Welcom to ${CONTEXT} - Subrutine for Dialer Calls)
same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-3,s,1)
; compruebo si hay que grabar la llamada
; compruebo cantidad de llamadas activas concurrentes
;......
;......
;compruebo si estamos dentro de la hora establecida para llamar TC
;......
;......
;compruebo si no tengo que disparar algun AGI
;......
;......
;compruebo FLAG de ON/OFF de la campaña
;......
;......

same => n,Set(__OMLUNIQUEID=${UNIQUEID})
same => n,Set(__OMLYEARZERO=${EPOCH})
same => n,Set(__OMLCALLSTATUS=DIAL)
same => n,Set(__OMLMOTHERCHAN=${CHANNEL})

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},,,,call))
same => n,Goto(oml-outr,${OMLOUTNUM},1)
same => n,Gosub(sub-oml-hangup,s,1(FAIL FAIL FAIL no hay ruta para ${OMLOUTNUM}))


[sub-oml-campaign-2-deliver-contactcall]
; esta subrutina procesa los llamados contactados por el DIALER
; Es invocada por el DIALER, ya que es el "terminal" de WD a donde envia
; todas las llamadas conectadas de todas las campañas - Local/XXXX:..........;1 (Canal creado por el originate:context WD)

include => sub-oml-campaign-2-deliver-contactcall-custom

exten => s,1,Verbose(2, deliver dialer contact call)

same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-4,s,1)

same => n,Set(__OMLOUTNUM=${WOMBAT_DIALING_NUMBER})
same => n,Set(__OMLCAMPID=${ID_CAMPANA})
same => n,Set(__OMLCAMPTYPE=${DB(OML/CAMP/${OMLCAMPID}/TYPE)})
same => n,Set(__OMLCAMPQNAME=${DB(OML/CAMP/${OMLCAMPID}/QNAME)})
same => n,Set(__OMLCALLTYPEID=2)
same => n,Set(__OMLCALLTYPE=dialer)
same => n,Set(__OMLCODCLI=${ID_CLIENTE})
same => n,Set(SHARED(OMLCODCLI,${OMLDIALERDIALOUTCHAN})=${OMLCODCLI})
same => n,Set(SHARED(OMLCODCLI,${CHANNEL})=${OMLCODCLI})

same => n,Set(__OMLMOTHERCHAN=${CHANNEL})
same => n,Set(__OMLDIALERDIALOUTCHAN=${CUT(CHANNEL,\;,1)}\;2)
same => n,Set(__OMLUNIQUEID=${IMPORT(${OMLDIALERDIALOUTCHAN},OMLUNIQUEID)})
same => n,Set(__OMLYEARZERO=${EPOCH})
same => n,Set(__OMLCALLSTATUS=ENTERQUEUE)
same => n,Set(SHARED(OMLCALLSTATUS,${OMLDIALERDIALOUTCHAN})=ENTERQUEUE)


same => n,SIPAddHeader(uidGrabacion:${GLOBAL(${OMLOUTNUM}uniqueid)})
same => n,SIPAddHeader(WombatID:${WOMBAT_HOPPER_ID})
;same => n,SIPAddHeader(Origin:${DB(OML/CAMP/${OMLCAMPID}/CALLAGENTACTION)})
same => n,SIPAddHeader(Origin:DIALER-FORM)
same => n,SIPAddHeader(IDCliente:${OMLCODCLI})
same => n,SIPAddHeader(IDCamp:${OMLCAMPID})
same => n,SIPAddHeader(OMLOUTNUM:${OMLOUTNUM})
same => n,Set(CALLERID(num)=${WOMBAT_DIALING_NUMBER})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},,${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},,,,call))

same => n,Gosub(sub-oml-rec-check,s,1)
same => n,GotoIf($["${OMLRECTHISCALL}" == "1"]?recCall)

same => n(queueCall),ExecIf($["${DB(OML/CAMP/${OMLCAMPID}/WELCOMEPLAY)}" != ""]?Background(${DB(OML/CAMP/${OMLCAMPID}/WELCOMEPLAY)}))
same => n,Queue(${DB(OML/CAMP/${OMLCAMPID}/QNAME)},ctT,,,${DB(OML/CAMP/${OMLCAMPID}/QUEUETIME)},,,sub-oml-queue-dialer-connect-agent)
same => n,Gosub(sub-oml-hangup,s,1(TIMEOUT Queue Camp ${OMLCAMPQNAME}))

same => n(recCall),Gosub(sub-oml-rec-filename,s,1(${OMLUNIQUEID},dialerCall))
same => n,Set(__OMLRECDIR=${STRFTIME(${EPOCH},,%C%y-%m-%d)})
same => n,MixMonitor(${OMLRECDIR}/${OMLRECFILENAME}.wav,b)
same => n,Goto(queueCall)


[sub-oml-campaign-4]
; esta subrutina procesa los intentos de llamadas del Preview
; Es invocada por [oml-dial-out] (oml_extensions.conf)

;include => sub-oml-campaign-4-custom

exten => s,1,Verbose(2, Welcom to ${CONTEXT} - Subrutine for Preview Calls)
same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-5,s,1)

same => n,Set(__OMLCAMPTYPE=4)

same => n,Set(__OMLPREVIEWDIALOUTCHAN=${CHANNEL})
same => n,Set(__OMLMOTHERCHAN=${CUT(CHANNEL,\;,1)}\;2)
same => n,Set(__OMLUNIQUEID=${IMPORT(${OMLMOTHERCHAN},OMLUNIQUEID)})

same => n,Set(__OMLYEARZERO=${EPOCH})
same => n,Set(__OMLCALLSTATUS=CANCEL)

same => n,Set(SHARED(OMLCALLSTATUS,${OMLPREVIEWDIALOUTCHAN})=${OMLCALLSTATUS})
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=${OMLCALLSTATUS})

;same => n,Set(__OMLCODCLI=${SHARED(OMLCODCLI,${OMLMOTHERCHAN})})

; compruebo cantidad de llamadas activas concurrentes
;......
;......
;compruebo si estamos dentro de la hora establecida para llamar TC
;......
;......
;compruebo si no tengo que disparar algun AGI
;......
;......
;compruebo FLAG de ON/OFF de la campaña
;......
;......

same => n(queueLog),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},DIAL,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},,,,call))

same => n,Goto(oml-outr,${OMLOUTNUM},1)
same => n,Gosub(sub-oml-hangup,s,1)



[sub-oml-campaign-9]
; esta subrutina procesa los intentos de Ag2Out Transfer
; Es invocada por [oml-dial-out] (oml_extensions.conf)
; Sale en busca de una ruta saliente que encamine el OMLOUTNUM

include => sub-oml-campaign-9-custom

exten => s,1,Verbose(2, Welcome to ${CONTEXT} - Subrutine for ag2OutTransfer)

same => n,ExecIf($["${OMLCAMPTYPE}" == "1" && "${OMLTRANSFERTYPE}" == "consultTransferOutCall"]?Set(__OMLMOTHERCHAN=${SHARED(OMLMOTHERCHAN,${TRANSFERERNAME})}))
same => n,ExecIf($["${OMLTRANSFERTYPE}" == "consultTransferOutCall"]?Set(__OMLCALLSTATUS=CTOUT-TRY):Set(__OMLCALLSTATUS=BTOUT-TRY))
same => n,ExecIf($["${OMLTRANSFERTYPE}" == "consultTransferOutCall"]?Set(__OMLCODCLI=${SHARED(OMLCODCLI,${OMLMOTHERCHAN})}))
same => n,ExecIf($["${OMLCAMPTYPE}" == "2"]?Set(__OMLCODCLI=${SHARED(OMLCODCLI,${OMLMOTHERCHAN})}))

same => n,ExecIf($["${OMLCAMPTYPE}" != "1"]?Set(__OMLAGENTID=${SHARED(OMLAGENTID,${OMLMOTHERCHAN})}))
same => n,Set(__TRANSFERID=9)

same => n,Set(__OMLYEARZEROTRANSFER=${EPOCH})
same => n,Set(__OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${OMLMOTHERCHAN})})
same => n,Set(__OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLANSWERTIMESTAMP,${OMLMOTHERCHAN})})

same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=${OMLCALLSTATUS})

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID}-${OMLOUTNUMTRANSFER},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${TRANSFERID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))

same => n,Goto(oml-outr,${OMLOUTNUMTRANSFER},1)
same => n,Gosub(sub-oml-hangup,s,1)


[sub-oml-dialout]
include => oml-dial-internal
include => oml-dial-out


; subrutine for dialout calls - pattern matching & trunk selection
; Es invocada por los [oml-outr-N] diferentes rutas salientes (oml_extensions_outr.conf)

include => sub-oml-dialout-custom

exten => s,1,Verbose(2, Los caminos pueden ser guías, pero no senderos trazados)
same => n,Set(OMLDIALOUTNAME=${DB(OML/OUTR/${ARG1}/NAME)})
same => n,Set(OMLDIALOUTTRUNKS=${DB(OML/OUTR/${ARG1}/TRUNKS)})
same => n,Set(OMLDIALOUTRINGTIME=${DB(OML/OUTR/${ARG1}/RINGTIME)})
same => n,Set(OMLDIALOUTOPTIONS=${DB(OML/OUTR/${ARG1}/OPTIONS)})
same => n,Set(OMLDIALOUTPREFIX=${DB(OML/OUTR/${ARG1}/PREFIX/${ARG2})})
same => n,Set(OMLDIALOUTPREPEND=${DB(OML/OUTR/${ARG1}/PREPEND/${ARG2})})

same => n,GotoIf($["${OMLTRANSFERTYPE}" == "blindTransferOutCall"]?blindTransferOutCall)
same => n,GotoIf($["${OMLTRANSFERTYPE}" == "consultTransferOutCall"]?consultTransferOutCall)

same => n,Set(__OMLDIALBRIDGE=oml-outcall-connect)
same => n,Set(__OMLDIALBRIDGEARGS=${OMLUNIQUEID}^${OMLAGENTID}^${OMLCAMPQNAME}^${OMLMOTHERCHAN}^${OMLYEARZERO}^${OMLMANUALCALLTYPEID}
same => n,Set(__DIALARGNUM=${OMLOUTNUM})

; inicio While trunks SET
same => n(outrWhile),Set(OUTRCOUNTER=1)
same => n,While($[${OUTRCOUNTER} <= ${OMLDIALOUTTRUNKS}])
same => n,Set(OMLDIALOUTTRUNK=${DB(OML/OUTR/${ARG1}/TRUNK/${OUTRCOUNTER})})
same => n,Progress()

same => n,Dial(SIP/${OMLDIALOUTTRUNK}/${OMLDIALOUTPREPEND}${DIALARGNUM:${OMLDIALOUTPREFIX}},${OMLDIALOUTRINGTIME},${OMLDIALOUTOPTIONS}cM(${OMLDIALBRIDGE}^${OMLDIALBRIDGEARGS}))

same => n,Verbose(2, Dialstatus ${DIALSTATUS})

same => n,GotoIf($[ "${DIALSTATUS}" == "ANSWER" ]?gotoIf)
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=${DIALSTATUS})
same => n,ExecIf($["${CUT(OMLDIALBRIDGE,-,2)}" == "blind"]?Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=BTOUT-${DIALSTATUS}))
same => n,ExecIf($["${CUT(OMLDIALBRIDGE,-,2)}" == "blind"]?Set(__OMLCALLSTATUS=BTOUT-${DIALSTATUS}))
same => n,ExecIf($["${CUT(OMLDIALBRIDGE,-,2)}" == "consult"]?Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CTOUT-${DIALSTATUS}))
same => n,ExecIf($["${CUT(OMLDIALBRIDGE,-,2)}" == "consult"]?Set(__OMLCALLSTATUS=CTOUT-${DIALSTATUS}))
same => n(gotoIf),GotoIf($["${DIALSTATUS}" == "ANSWER"]?noFailover)
same => n,GotoIf($["${DIALSTATUS}" == "BUSY"]?noFailoverBusy)
same => n,GotoIf($["${DIALSTATUS}" == "NOANSWER"]?noFailoverNoanswer)

same => n,Set(OUTRCOUNTER=${INC(OUTRCOUNTER)})
same => n,EndWhile(close)
; fin While trunks SET
same => n,Verbose(2, Dial failed DIALSTATUS = ${DIALSTATUS} - HANGUPCAUSE = ${HANGUPCAUSE})
same => n,UserEvent(CALLSTATUS,Uniqueid:${CHANNEL(linkedid)},V:RS_REJECTED)
same => n,Congestion()
same => n,Gosub(sub-oml-hangup,s,1(sub-oml-dialout no pudo cursar la llamada saliente))

same => n(noFailoverBusy),Verbose(2, Dial failed DIALSTATUS = ${DIALSTATUS} - HANGUPCAUSE = ${HANGUPCAUSE})
same => n,Playtones(busy)
same => n,Busy(5)
same => n,UserEvent(CALLSTATUS,Uniqueid:${CHANNEL(linkedid)},V:RS_BUSY)
same => n,Gosub(sub-oml-hangup,s,1(sub-oml-dialout no pudo cursar la llamada saliente))

same => n(noFailoverNoanswer),Verbose(2, Dial failed DIALSTATUS = ${DIALSTATUS} - HANGUPCAUSE = ${HANGUPCAUSE})
same => n,UserEvent(CALLSTATUS,Uniqueid:${CHANNEL(linkedid)},V:RS_NOANSWER)
same => n,Gosub(sub-oml-hangup,s,1(sub-oml-dialout no pudo cursar la llamada saliente))

same => n(blindTransferOutCall),Set(__OMLDIALBRIDGE=oml-blind-transfer-outcall-connect)
same => n,Set(__OMLDIALBRIDGEARGS=${OMLUNIQUEID}^${OMLAGENTID}^${OMLCAMPQNAME}^${OMLMOTHERCHAN}^${OMLYEARZEROTRANSFER}^${OMLCAMPTYPE}^${OMLOUTNUMTRANSFER}^${OMLTRANSFERTYPE})
same => n,Set(__DIALARGNUM=${OMLOUTNUMTRANSFER})
same => n,Goto(outrWhile)

same => n(consultTransferOutCall),Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(ag2OutConsultTransferAux,${OMLOUTNUMTRANSFER}))
same => n,Set(__OMLDIALBRIDGE=oml-consult-transfer-outcall-connect)
same => n,Set(__OMLDIALBRIDGEARGS=${OMLUNIQUEID}^${OMLAGENTID}^${OMLCAMPQNAME}^${OMLMOTHERCHAN}^${OMLYEARZEROTRANSFER}^${OMLCAMPTYPE}^${OMLOUTNUMTRANSFER}^${OMLTRANSFERTYPE})
same => n,Set(__DIALARGNUM=${OMLOUTNUMTRANSFER})
same => n,Goto(outrWhile)


[sub-oml-callstatus-blacklist-omdialed]
; En caso de ser un "Falso Answer" provocado en el canal PSTN aqui se mandan los callstatus a WD
; comprobacion de blacklist
; Es invocada por [sub-oml-campaign-2-deliver-contactcall]

include => sub-oml-callstatus-blacklist-omdialed-custom

exten => s,1,Verbose(2, comprobacion de blacklist)
same => n,AGI(omni-blacklist.php,${WOMBAT_DIALING_NUMBER})
same => n,Verbose(2, resultado del blacklist: ${BLACKLIST})
same => n,GotoIf($["${BLACKLIST}" == "0"]?nexttest)
same => n,UserEvent(CALLSTATUS,Uniqueid:${UNIQUEID},V:BLACKLIST)
same => n,Hangup()
; comprobacion de oml call
same => n(nexttest),Verbose(2, comprobacion de OML Dialednum)
same => n,AGI(omni-dialednum.php,${WOMBAT_DIALING_NUMBER},${ID_CAMPANA})
same => n,Verbose(2, resultado del oml dialednum: ${OMLDIALEDNUM})
same => n,GotoIf($["${OMLDIALEDNUM}" == "0"]?return)
same => n,UserEvent(CALLSTATUS,Uniqueid:${UNIQUEID},V:OMLDIALEDNUM)
same => n,Hangup()
same => n(return),Return()








; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         MODULES SUBRUTINES      OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         MODULES SUBRUTINES      OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         MODULES SUBRUTINES      OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[sub-oml-module-ivr]
; subrutina que implementa modulo de IVR

include => sub-oml-module-ivr-custom

exten => s,1,Verbose(2, "The cost of sanity in this society, is a certain level﻿ of alienation" - Terrence McKenna)
same => n,Set(OMLIVRID=${ARG1})
same => n,Set(OMLIVRNAME=${DB(OML/IVR/${OMLIVRID}/NAME)})
same => n,Set(OMLIVROPTIONS=${DB(OML/IVR/${OMLIVRID}/OPTION/OPTIONS)})
same => n,Set(OMLIVRRETRY=${DB(OML/IVR/${OMLIVRID}/RETRY)})
same => n,Set(OMLIVRDEFAULTTODST=${DB(OML/IVR/${OMLIVRID}/DEFAULTTODST)})
same => n,Set(OMLIVRDEFAULTINVDST=${DB(OML/IVR/${OMLIVRID}/DEFAULTINVDST)})

same => n,Set(OMLTOCOUNT=1)
same => n,Set(OMLINVCOUNT=1)
same => n,Set(XCOUNT=1)

same => n(audio),Read(OMLIVRDTMF,${DB(OML/IVR/${OMLIVRID}/AUDIO),,,1,${DB(OML/IVR/${OMLIVRID}/TIMEOUT)})
same => n,GotoIf($[${ISNULL(${OMLIVRDTMF})}]?nullDTMF)

same => n(while),Set(COUNTER=1)
same => n,While($[${COUNTER} <= ${OMLIVROPTIONS}])
same => n,GotoIf($["${OMLIVRDTMF}" == "${DB(OML/IVR/${OMLIVRID}/OPTION/${COUNTER}/DTMF)}"]?correctOpt)
same => n,Set(COUNTER=${INC(COUNTER)})
same => n,EndWhile()

same => n,Verbose(2, DTMF invalido para este IVR) ; retry & contador de fallos
same => n,GotoIf($[ISNULL(${${OMLIVRRETRY})}]?invalidDst)
same => n,Gosub(sub-oml-countdown,s,1(${XCOUNT},${OMLIVRRETRY}))
same => n,GotoIf($["${GOSUB_RETVAL}" == "0"]?invalidDst)
same => n,Goto(audio)

same => n(invalidDst),Gosub(sub-oml-dst-switch,s,1(${DB(OML/IVR/${OMLIVRID}/DEFAULTINVDST)})
same => n,Gosub(sub-oml-hangup,s,1(FAIL-IVR))

same => n(nullDTMF),Verbose(2, DTMF nulo para este IVR)
same => n,GotoIf($[ISNULL(${${OMLIVRRETRY})}]?timeOutDst)
same => n,Gosub(sub-oml-countdown,s,1(${XCOUNT},${OMLIVRRETRY}))
same => n,GotoIf($["${GOSUB_RETVAL}" == "0"]?timeOutDst)
same => n,Goto(audio)

same => n(timeOutDst),Gosub(sub-oml-dst-switch,s,1(${DB(OML/IVR/${OMLIVRID}/DEFAULTTODST)})
same => n,Gosub(sub-oml-hangup,s,1(FAIL-IVR))

same => n(correctOpt),Set(OMLOBJDST=${DB(OML/IVR/${OMLIVRID}/OPTION/${COUNTER}/DST)})
same => n,Gosub(sub-oml-dst-switch,s,1(${OMLOBJDST}))
same => n,Gosub(sub-oml-hangup,s,1(FAIL-IVR))


[sub-oml-module-time-groups]
include => sub-oml-module-time-groups-custom

exten => s,1,Verbose(2, OMLTGID: ${ARG1})
same => n,Set(OMLTGID=${ARG1})
same => n,Set(OMLTGENTRIES=${DB(OML/TG/${OMLTGID}/ENTRIES)})
; inicio While  inicio While  inicio While  inicio While  inicio While  inicio While
same => n(while),Set(OMLTGCOUNTER=1)
same => n,While($[${OMLTGCOUNTER} <= ${OMLTGENTRIES}])
same => n,Set(OMLTGHOURF=${DB(OML/TG/${OMLTGID}/ENTRY/${OMLTGCOUNTER}/HOURF)})
same => n,Set(OMLTGHOURT=${DB(OML/TG/${OMLTGID}/ENTRY/${OMLTGCOUNTER}/HOURT)})
same => n,Set(OMLTGDAYF=${DB(OML/TG/${OMLTGID}/ENTRY/${OMLTGCOUNTER}/DAYF)})
same => n,Set(OMLTGDAYT=${DB(OML/TG/${OMLTGID}/ENTRY/${OMLTGCOUNTER}/DAYT)})
same => n,Set(OMLTGDAYNUMF=${DB(OML/TG/${OMLTGID}/ENTRY/${OMLTGCOUNTER}/DAYNUMF)})
same => n,Set(OMLTGDAYNUMT=${DB(OML/TG/${OMLTGID}/ENTRY/${OMLTGCOUNTER}/DAYNUMT)})
same => n,Set(OMLTGMONTHF=${DB(OML/TG/${OMLTGID}/ENTRY/${OMLTGCOUNTER}/MONTHF)})
same => n,Set(OMLTGMONTHT=${DB(OML/TG/${OMLTGID}/ENTRY/${OMLTGCOUNTER}/MONTHT)})

same => n,Set(OMLTGHOURRANGE=${OMLTGHOURF}-${OMLTGHOURT})
same => n,GotoIf($["${OMLTGHOURF}" == "${OMLTGHOURT}"]?setHourRange)

; check si el rango esta compuesto por el mismo valor
same => n(dayRangeSet),Set(OMLTGDAYRANGE=${OMLTGDAYF}-${OMLTGDAYT})
same => n,GotoIf($["${OMLTGDAYF}" == "${OMLTGDAYT}"]?setDayRange)

same => n(dayNumRangeSet),Set(OMLTGDAYNUMRANGE=${OMLTGDAYNUMF}-${OMLTGDAYNUMT})
same => n,GotoIf($["${OMLTGDAYNUMF}" == "${OMLTGDAYNUMT}"]?setDayNumRange)

same => n(monthRangeSet),Set(OMLTGMONTHRANGE=${OMLTGMONTHF}-${OMLTGMONTHT})
same => n,GotoIf($["${OMLTGMONTHF}" == "${OMLTGMONTHT}"]?setMonthRange)

same => n(checkTime),GotoIfTime(${OMLTGHOURRANGE},${OMLTGDAYRANGE},${OMLTGDAYNUMRANGE},${OMLTGMONTHRANGE}?trueCondition:falseCondition)

same => n,Set(OMLTGCOUNTER=${INC(OMLTGCOUNTER)})
same => n,EndWhile()
same => n,Return(FAIL DIALPLAN)

; true destination
same => n(trueCondition),Set(__OMLTGRESULT=1)
same => n,Return()

; false destination
same => n(falseCondition),Set(__OMLTGRESULT=0)
same => n,Return()

; AUX set range variables, cuando variables DESDE HASTA son iguales
same => n(setHourRange),Set(OMLTGDAYRANGE=${OMLTGDAYF})
same => n,Gosub(sub-oml-hangup,s,1(error de hora))

same => n(setDayRange),Set(OMLTGDAYRANGE=${OMLTGDAYF})
same => n,Goto(dayNumRangeSet)

same => n(setDayNumRange),Set(OMLTGDAYNUMRANGE=${OMLTGDAYNUMF})
same => n,Goto(monthRangeSet)

same => n(setMonthRange),Set(OMLTGMONTHRANGE=${OMLTGMONTHF})
same => n,Goto(checkTime)


[sub-oml-module-time-conditions]
include => sub-oml-module-time-conditions-custom

exten => s,1,Verbose(2, OMLTCID: ${ARG1})
same => n,Set(OMLTCID=${ARG1})
same => n,Set(OMLTCTRUEDST=${DB(OML/TC/${OMLTCID}/TRUEDST)})
same => n,Set(OMLTCFALSEDST=${DB(OML/TC/${OMLTCID}/FALSEDST)})
same => n,Set(OMLTGID=${DB(OML/TC/${OMLTCID}/TGID)})
same => n,GoSub(sub-oml-module-time-groups,s,1(${OMLTGID}))
same => n,GotoIf($["${OMLTGRESULT}" == "1"]?trueCondition:falseCondition)
same => n,Gosub(sub-oml-hangup,s,1(fallo time-conditions module))

; false destination
same => n(trueCondition),Gosub(sub-oml-dst-switch,s,1(${OMLTCTRUEDST}))
same => n,Gosub(sub-oml-hangup,s,1(fail time-conditions module))

; true destination
same => n(falseCondition),Gosub(sub-oml-dst-switch,s,1(${OMLTCFALSEDST}))
same => n,Gosub(sub-oml-hangup,s,1(fail time-conditions module))




; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         AGENTS SUBRUTINES       OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         AGENTS SUBRUTINES       OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         AGENTS SUBRUTINES       OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[sub-oml-agent-login]
; ARG1: OMLAGENTID, ARG2: OMLAGENTSIP, ARG3: OMLAGENTSTATUS, ARG4: Origen del login
include => sub-oml-agent-login-custom

exten => s,1,Verbose(2, Agent login ${ARG1})
; Si es un F5, compruebo primero si es que esta en pausa, para hacer un UNPAUSEALL
same => n,GotoIf($["${ARG3}" == "READY"]?goNext)
same => n,GotoIf($["${ARG3}" == "OFFLINE"]?goNext)
same => n,Verbose(2,Agent Unpaused)
same => n,QueueLog(ALL,${UNIQUEID},${ARG1},UNPAUSEALL)
; Si es un F5, compruebo primero si es que esta en logueado a alguna campaña, para hacer un REMOVEMEMBER
same => n(goNext),Set(ODBC_ID=${OMNILEADS_LOGIN_LOGOUT(${ARG1})})
same => n,Set(RESULTREMOVE=NULL)
same => n,GotoIf($[${ODBCROWS} < 1]?no_rows,1)
same => n,Set(COUNTER=1)
; si ya esta logueado (es un f5) entonces primero desloguea
same => n,While($[${COUNTER} <= ${ODBCROWS}])
same => n,Set(ARRAY(PENALTY,QUEUENAME)=${ODBC_FETCH(${ODBC_ID})})
same => n,Verbose(2, Campaign: ${QUEUENAME})
same => n,Verbose(2, Penalty:${PENALTY})
same => n,RemoveQueueMember(${QUEUENAME},SIP/${ARG2})
same => n,Set(COUNTER=${INC(COUNTER)})
same => n,Verbose(2, Result of RemoveQueueMember: ${RQMSTATUS})
same => n,ExecIf($["${RQMSTATUS}" == "REMOVED"]?Gosub(sub-oml-remove-add,s,1))
same => n,EndWhile()
same => n,ODBCFinish()
same => n,GotoIf($["${OMLFLAGREMOVE}" != "true"]?noQueuelog)
same => n,QueueLog(ALL,${UNIQUEID},${OMLAGENTID},REMOVEMEMBER)
; comienza login
same => n(noQueuelog),Set(ODBC_ID=${OMNILEADS_LOGIN_LOGOUT(${ARG1})})
same => n,GotoIf($[${ODBCROWS} < 1]?no_rows,1)
same => n,Set(COUNTER=1)

same => n,While($[${COUNTER} <= ${ODBCROWS}])
same => n,Set(ARRAY(PENALTY,QUEUENAME)=${ODBC_FETCH(${ODBC_ID})})
same => n,Verbose(2, Campaign: ${QUEUENAME})
same => n,Verbose(2, Penalty:${PENALTY})
same => n,AddQueueMember(${QUEUENAME},SIP/${MemberChannel},${PENALTY},,${AGENTNAME})
same => n,Set(COUNTER=${INC(COUNTER)})
same => n,EndWhile()
same => n,ODBCFinish()
same => n,QueueLog(ALL,${UNIQUEID},${OMLAGENTID},ADDMEMBER)
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=READY:${EPOCH})
same => n,Playback(silence/1&oml/agente-ok)
same => n,Hangup()

exten => no_rows,1,Verbose(1,No rows returned)
same => n,Playback(silence/1&oml/agente-ok-no-campaign)
same => n,Hangup()


[sub-oml-agent-logout]
; ARG1: OMLAGENTID, ARG2: OMLAGENTSIP, ARG3: OMLAGENTSTATUS, ARG4: Origen del logout
include => sub-oml-agent-logout-custom

exten => s,1,Verbose(2, Agent login ${ARG1})
same => n,Verbose(Pause status: ${ARG3})})
same => n,GotoIf($[${ARG3}" == "READY"]?nonPause)
same => n,Verbose(2,Agent Unpaused before logout)
same => n,QueueLog(ALL,${UNIQUEID},${OMLAGENTID},UNPAUSEALL)

same => n(nonPause),Set(ODBC_ID=${OMNILEADS_LOGIN_LOGOUT(${ARG1})})
same => n,GotoIf($[${ODBCROWS} < 1]?no_rows,1)
same => n,Set(COUNTER=1)
same => n,While($[${COUNTER} <= ${ODBCROWS}])
same => n,Set(ARRAY(PENALTY,QUEUENAME)=${ODBC_FETCH(${ODBC_ID})})
same => n,Verbose(2, Campaign: ${QUEUENAME})
same => n,Verbose(2, Penalty:${PENALTY})
same => n,RemoveQueueMember(${QUEUENAME},SIP/${ARG2})
same => n,Set(COUNTER=${INC(COUNTER)})
same => n,EndWhile()
same => n,ODBCFinish()
same => n,QueueLog(ALL,${UNIQUEID},${OMLAGENTID},REMOVEMEMBER)
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=OFFLINE:${EPOCH})
same => n,Playback(silence/1&agent-loggedoff)
same => n,Hangup()

exten => no_rows,1,Verbose(1,No rows returned)
same => n,Playback(silence/1&oml/agente-ok-no-campaign)
same => n,Hangup()


[sub-oml-agent-pause]
; ARG1: OMLAGENTID, ARG2: OMLAGENTSIP, ARG3: OMLPAUSEID
include => sub-oml-agent-pause-custom

exten => s,1,Verbose(2, Agent pause ${ARG1})

same => n,Set(OMLPAUSENAME=${DB(OML/PAUSE/${ARG3}/NAME)})
same => n,ExecIf($["${ARG3}" == "0"]?Set(OMLPAUSENAME=ACW))
same => n,ExecIf($["${ARG3}" == "00"]?Set(OMLPAUSENAME=Supervision))
same => n,PauseQueueMember(,SIP/${ARG2},,${ARG3})
same => n,GotoIf($[${PQMSTATUS} = PAUSED]?agent_paused:agent_not_found)

same => n(agent_paused),Verbose(2,Agent paused successfully)
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=PAUSE-${OMLPAUSENAME}:${EPOCH})
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/IDPAUSE)=${ARG1})
same => n,QueueLog(ALL,${UNIQUEID},${ARG1},PAUSEALL,${ARG3})
same => n,Playback(silence/1&oml/agente-pausa)
same => n,Hangup()

same => n(agent_not_found),Verbose(2,Agent was not found)
same => n,Playback(silence/1&oml/agente-no-campaign)
same => n,Hangup()

[sub-oml-agent-unpause]
; ARG1: OMLAGENTID, ARG2: OMLAGENTSIP
include => sub-oml-agent-unpause-custom

exten => s,1,Verbose(2, Agent unpause ${ARG1})

same => n,UnPauseQueueMember(,SIP/${ARG2})
same => n,GotoIf($[${UPQMSTATUS} = UNPAUSED]?agent_unpaused:agent_not_found)

same => n(agent_unpaused),Verbose(2, Agent paused successfully)
same => n,Set(DB(OML/AGENT/${ARG1}/STATUS)=READY:${EPOCH})
same => n,QueueLog(ALL,${UNIQUEID},${ARG1},UNPAUSEALL,${DB(OML/AGENT/${ARG1}/IDPAUSE)})
same => n,Playback(silence/1&oml/agente-disponible)
same => n,Hangup()

same => n(agent_not_found),Verbose(2, Agent was not found)
same => n,Playback(silence/1&oml/agente-no-campaign)


[sub-oml-remove-add]
exten => s,1,Verbose(2, session flag)
same => n,Set(OMLFLAGREMOVE=true)
same => n,Return()

; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         COMMON SUBRUTINES       OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         COMMON SUBRUTINES       OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         COMMON SUBRUTINES       OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[sub-oml-queuelog]
; Subrutina para el tratamiento de todos los QueueLogs

; Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},,call))
; ARG1-OMLCAMPID, ARG2-UNIQUEID, ARG3-OMLAGENTID, ARG4-OMLEVENT, ARG5-OMLOUTNUM, ARG6-OMLCODCLI, ARG7-OMLCALLTYPEID
; ARG8-OMLCAMPTYPE, ARG9-OMLWAITCALLDURATION, ARG10-OMLCALLDURATION, ARG11-OMLRECFILENAME, ARG12-TYPEEVENT

; QueueLog(${ARG1}-${ARG8}-${ARG7},${ARG2},${ARG3},${ARG4},${ARG5},${ARG6},${ARG9},${ARG10},${ARG11})

; QueueLog Dialout Event-DIAL, data1-OMLOUTNUM, data2-OMLCODCLI
; QueueLog Dialout Event-ANSWER, data1-OMLOUTNUM, data2-OMLCODCLI, data3-OMLWAITCALLDURATION
; QueueLog Dialout Event-COMPLETECALLER|COMPLETEAGENT, data1-OMLOUTNUM, data2-OMLCODCLI, data3-OMLWAITCALLDURATION, data4-OMLCALLCURARION
; QueueLog Dialout Event-!ANSWER, data1-OMLOUTNUM, data2-OMLCODCLI, data3-OMLWAITCALLDURATION

; QueueLog Queue Dialer Event-ENTERQUEUE, data1-OMLOUTNUM, data2-OMLCODCLI
; QueueLog Queue Dialer Event-CONNECT, data1-OMLOUTNUM, data3-ring duration, data5-OMLCAMPTYPEID, data6-OMLCODCLI
; QueueLog Queue Dialer Event-COMPLETECALLER|COMPLETEAGENT, data1-OMLOUTNUM, data3-ring duration, data4-call duration, data5-OMLCAMPTYPEID, data6-OMLCODCLI
; QueueLog Queue Dialer Event-ABANDON, data1-OMLOUTNUM, data3-ring duration, data5-OMLCAMPTYPEID, data6-OMLCODCLI
; QueueLog Queue Dialer Event-EXPIREWITHTIMEOUT, data1-OMLOUTNUM, data3-ring duration, data5-OMLCAMPTYPEID, data6-OMLCODCLI

; QueueLog Queue Inbound Event-ENTERQUEUE, data1-OMLOUTNUM, data2-position, data5-OMLCAMPTYPEID, [data6-OMLCODCLI]
; QueueLog Queue Inbound Event-CONNECT, data1-OMLOUTNUM, data2-position, data3-ring duration, data5-OMLCAMPTYPEID, [data6-OMLCODCLI]
; QueueLog Queue Inbound Event-COMPLETECALLER|COMPLETEAGENT, data1-OMLOUTNUM, data2-position, data3-ring duration, data4-call duration, data5-OMLCAMPTYPEID, [data6-OMLCODCLI]
; QueueLog Queue Inbound Event-ABANDON, data1-OMLOUTNUM, data2-position, data3-ring duration, data5-OMLCAMPTYPEID, [data6-OMLCODCLI]
; QueueLog Queue Inbound Event-EXPIREWITHTIMEOUT, data1-OMLOUTNUM, data2-position, data3-ring duration, data5-OMLCAMPTYPEID, [data6-OMLCODCLI]

include => sub-oml-queuelog-custom

exten => s,1,Verbose(2, Subrutine for qlog - EVENTTYPE:${ARG10})
same => n,Goto(${ARG12})

same => n(call),Verbose(2, qlog Call: ARG1->OMLCAMPID:${ARG1}, ARG2->UID:${ARG2}, ARG3->OMLAGENTID:${ARG3})
same => n,Verbose(2, qlog Call: ARG4->EVENT:${ARG4}, ARG5->OMLOUTNUM:${ARG5}, ARG6->OMLCODCLI:${ARG6})
same => n,Verbose(2, qlog Call: ARG7->OMLCALLTYPEID:${ARG7}, ARG8->OMLCAMPTYPE:${ARG8}, ARG9->OMLCALLWAITDURATION:${ARG9})
same => n,Verbose(2, qlog Call: ARG10->OMLCALLDURATION:${ARG10}, ARG11->OMLRECFILENAME:${ARG11})

same => n,ExecIf($[${ISNULL(${ARG9})}]?Set(ARG9=0))
same => n,GotoIf($["${ARG3}" != "dialer-dialout"]?while)
same => n,Set(ARG3=)

same => n(while),Set(COUNTER=1)
same => n,While($[${COUNTER} < 12])
same => n,ExecIf($[${ISNULL(${ARG${COUNTER}})}]?Set(ARG${COUNTER}=-1))
same => n,Set(COUNTER=${INC(COUNTER)})
same => n,EndWhile()

same => n,QueueLog(${ARG1}-${ARG8}-${ARG7},${ARG2},${ARG3},${ARG4},${ARG5}|${ARG6}|${ARG9}|${ARG10}|${ARG11})
same => n,Return()

same => n(pause),Verbose(2, qlog Pause: ARG1->UID:${ARG1}, ARG2->OMLAGENTID:${ARG2}, ARG3->OMLPAUSEID:${ARG3})
same => n,QueueLog(${ARG1},${ARG2},${ARG3},${ARG4},)
same => n,Return()

same => n(unpause),QueueLog(${ARG1},${ARG2},${ARG3},${ARG4},${ARG5})
same => n,Return()

same => n(login),QueueLog(${ARG1},${ARG2},${ARG3},${ARG4},)
same => n,Return()

same => n(logoff),QueueLog(${ARG1},${ARG2},${ARG3},${ARG4},)
same => n,Return()

[sub-oml-dst-switch]
; esta sub recibe como parámetros el tipo de obj a enrutar y el id del mismo
; puede ser invocada por los modulos de inr, outr, ivr, tc, queue, etc.
include => sub-oml-dst-switch-custom

exten => s,1,Verbose(2, "Un viaje de mil millas comienza con el primer paso" - Lao Tse)
same => n,Set(OMLDEST=${ARG1})
same => n,Set(OMLOBJID=${ARG2})
same => n,Gosub(${DB(OML/GLOBALS/OBJ/${OMLDEST})}(${OMLOBJID}))
same => n,Return(FAIL-SWITCH)

[sub-oml-set-chanvars]
; subrutina de setting de OML-CHANVARS. Es invocada en el "nacimiento" de cada canal de OML de manera tal
; que cada canal (dentro de lo posible) cuente con las variables de canal generales de OML
; ARG1 OMLCAMPID | ARG1 OMLAGENTID | ARG1 OMLCODCLI
include => sub-oml-set-chanvars-custom

exten => s,1,Verbose(2, Set OML Channel Vars)
same => n,Goto(${ARG2})

same => n(camp),Set(OMLCAMPQNAME=${DB(OML/CAMP/${ARG1}/QNAME)})
same => n,Set(__OMLCAMPCALLAGENTACTION=${DB(OML/CAMP/${ARG1}/CALLAGENTACTION)})
same => n,Set(__OMLCAMPFAILOVER=${DB(OML/CAMP/${ARG1}/FAILOVER)})
same => n,Set(__OMLCAMPMAXCALLS=${DB(OML/CAMP/${ARG1}/MAXCALLS)})
same => n,Set(__OMLCAMPMAXQCALLS=${DB(OML/CAMP/${ARG1}/MAXQCALLS)})
same => n,Set(__OMLCAMPQUEUETIME=${DB(OML/CAMP/${ARG1}/QUEUETIME)})
same => n,Set(__OMLCAMPREC=${DB(OML/CAMP/${ARG1}/REC)})
same => n,Set(__OMLCAMPRINGTIME=${DB(OML/CAMP/${ARG1}/RINGTIME)})
same => n,Set(__OMLCAMPSL=${DB(OML/CAMP/${ARG1}/SL)})
same => n,Set(__OMLCAMPTYPE=${DB(OML/CAMP/${ARG1}/TYPE)})
same => n,Return()

same => n(agent),Set(__OMLAGENTSIP=${DB(OML/AGENT/${ARG1}/SIP)})
same => n,Set(__OMLAGENTNAME=${DB(OML/AGENT/${ARG1}/NAME)})
same => n,Set(__OMLAGENTSTATUS=${CUT(DB(OML/AGENT/${ARG1}/STATUS),:,1)})
same => n,Return()

same => n(client),Verbose(2, el futuro es ilusorio)
same => n,Return()


[sub-oml-countdown]
; macro utilizada por bucles con contador

include => sub-oml-countdown-custom

exten => s,1,Verbose(2, "La madurez del hombre es haber vuelto a encontrar la seriedad con que jugaba cuando era niño" - Friedrich Nietzsche)
same => n,Verbose(2, intento ${ARG1} de ${ARG2})
same => n,Set(XCOUNT=${INC(ARG1)})
same => n,GotoIf($[${ARG1} <= ${ARG2}]?return)
same => n,Verbose(2,End of the loop)
same => n,Return(0)
same => n(return),Return(${XCOUNT})


[sub-oml-rec-check]
; esta sub comprueba si la campaña tiene activo la grabacion.
include => sub-oml-rec-check-custom

exten => s,1,Verbose(2, Welcome to ${CONTEXT} - OMLCAMPID:${ARG1} - UNIQUEIDREC:${ARG2})
;same => n,GotoIf($["${CAMP${OMLCAMPID}REC}" == "0"]?return)
same => n,GotoIf($["${DB(OML/CAMP/${OMLCAMPID}/REC)}" != "True"]?return)
same => n,Set(__OMLRECTHISCALL=1)
same => n(return),Return()

[sub-oml-rec-filename]
; esta sub arma el OMLRECFILENAME para la llamada y tipo de campaña.
include => sub-oml-rec-filename-custom

exten => s,1,Verbose(2, Welcome to ${CONTEXT} - UNIQUEIDREC:${ARG1})
same => n,GotoIf($["${ARG1}" != ""]?withUniqueidRec)
same => n,Set(UNIQUEIDREC=${UNIQUEID})
same => n(withUniqueidRec),Set(UNIQUEIDREC=${ARG1})
same => n,Goto(${ARG2})

same => n(manualCall),Verbose(2, rec the ${OMLCAMPID} call ${OMLOUTNUM})
same => n,Set(__OMLRECFILENAME=mc-${OMLCAMPID}-${STRFTIME(${EPOCH},,%Y%m%d)}-${OMLAGENTID}-${OMLOUTNUM}-${UNIQUEIDREC})
same => n,Set(SHARED(OMLRECFILENAME,${OMLMOTHERCHAN})=${OMLRECFILENAME})
same => n,Return()

same => n(dialerCall),Verbose(2, rec the ${OMLCAMPID} call ${OMLOUTNUM})
same => n,Set(__OMLRECFILENAME=dialer-${OMLCAMPID}-${STRFTIME(${EPOCH},,%Y%m%d)}-${OMLOUTNUM}-${UNIQUEIDREC})
same => n,Set(SHARED(OMLRECFILENAME,${OMLMOTHERCHAN})=${OMLRECFILENAME})
same => n,Return()

same => n(inboundCall),Verbose(2, rec the ${OMLCAMPID} call ${OMLOUTNUM})
same => n,Set(__OMLRECFILENAME=in-${OMLCAMPID}-${STRFTIME(${EPOCH},,%Y%m%d)}-${OMLOUTNUM}-${UNIQUEIDREC})
same => n,Set(SHARED(OMLRECFILENAME,${OMLMOTHERCHAN})=${OMLRECFILENAME})
same => n,Return()

same => n(previewCall),Verbose(2, rec the ${OMLCAMPID} call ${OMLOUTNUM})
same => n,Set(__OMLRECFILENAME=prev-${OMLCAMPID}-${STRFTIME(${EPOCH},,%Y%m%d)}-${OMLAGENTID}-${OMLOUTNUM}-${UNIQUEIDREC})
same => n,Set(SHARED(OMLRECFILENAME,${OMLMOTHERCHAN})=${OMLRECFILENAME})
same => n,Return()

same => n(click2Call),Verbose(2, rec the ${OMLCAMPID} call ${OMLOUTNUM})
same => n,Set(__OMLRECFILENAME=click2call-${OMLCAMPID}-${STRFTIME(${EPOCH},,%Y%m%d)}-${OMLAGENTID}-${OMLOUTNUM}-${UNIQUEIDREC})
same => n,Set(SHARED(OMLRECFILENAME,${OMLMOTHERCHAN})=${OMLRECFILENAME})
same => n,Return()

same => n(internalCall),Verbose(2, rec the ${OMLCAMPID} call ${OMLOUTNUM})
same => n,Set(__OMLRECFILENAME=internal-${STRFTIME(${EPOCH},,%Y%m%d)}-${OMLAGENTID}-${OMLOUTNUM}-${UNIQUEIDREC})
same => n,Set(SHARED(OMLRECFILENAME,${OMLMOTHERCHAN})=${OMLRECFILENAME})
same => n,Return()


[sub-oml-amd]
; Subrutina para detección de contestadores
include => sub-oml-amd-custom

exten => s,1,Verbose(2, AMD subrutine for camp ${ARG1})
same => n,GotoIf($["${DB(OML/CAMP/${OMLCAMPID}/AMD)}" == "1"]?amd)
same => n(amd_human),Return()

same => n(amd),AMD()
same => n,NoOp(AMDSTATUS=${AMDSTATUS})
same => n,GotoIf($["${AMDSTATUS}" == "MACHINE"]?amd_machine:amd_human)

same => n(amd_machine),NoOp(es una maquina)
same => n,Set(__OMLAMD=1)
same => n,UserEvent(CALLSTATUS,Uniqueid:${UNIQUEID},V:CONTESTADOR)
; discriminar por tipo de llamada asi metemos AMD en llamadas preview !!!!
; discriminar por tipo de llamada asi metemos AMD en llamadas preview !!!!
same => n,Playback(${DB(OML/CAMP/${OMLCAMPID}/AMDAUDIO)})
same => n,Playback(${DB(OML/CAMP/${OMLCAMPID}/AMDAUDIO)})
same => n,Gosub(sub-oml-hangup)

[sub-oml-ncalls]
; Subrutina para conteo de llamadas concurrentes
include => sub-oml-ncalls-custom


[sub-oml-hangup]
; Subrutina de ejecución de hangup
include => sub-oml-hangup-custom

exten => s,1,Verbose(2, El universo es una creación mental sostenida en la mente del TODO)
same => n,Verbose(2, Todo fue un fugaz pensamiento en la mente del TODO)
same => n,Verbose(2, ${ARG1})
same => n,Hangup()

; Subrutina para comprobar blacklist (c2c, manual y preview) y blacklist & dialednum (dialer)
[sub-oml-blacklist]
exten => s,1,Verbose(2, OMLOUTNUM: ${ARG1}, OMLCALLTYPEID: ${ARG2}, OMLCAMPID: ${ARG3} )
same => n,GotoIf($[${ARG2} == "2"]?dialerCall)
; manual, c2c, preview
same => n(otherCall),AGI(omni-blacklist.php,${ARG1})
same => n,Verbose(2, resultado del blacklist: ${BLACKLIST})
same => n,GotoIf($["${BLACKLIST}" == "1"]?blacklist,1)
same => n,Set(BLACKLIST=0)
same => n,Return()
same => n(blacklist),Set(BLACKLIST=1)
same => n,Gosub(sub-oml-hangup)
; dialer call
same => n(dialerCall),Verbose(2, dialerCall Blacklist & Dialed number)
same => n,Verbose(2, number -${ARG1}- is in the blacklist)
same => n,AGI(omni-blacklist.php,${ARG1})
same => n,Verbose(2, blacklist result: ${BLACKLIST})
same => n,GotoIf($["${BLACKLIST}" == "1"]?blacklist,1)
same => n,Verbose(2, number -${ARG1}- was contacted previsly)
same => n,AGI(omni-dialednum.php,${ARG1},${ARG3})
same => n,Verbose(2, resultado del oml dialednum: ${OMLDIALEDNUM})
same => n,GotoIf($["${OMLDIALEDNUM}" == "1"]?falseanswer,1)
same => n,Return()

exten => falseanswer,1,Verbose(2, don't call, but insert a callstatus for WD)
same => n,Set(OMLDIALEDNUM=1)
same => n,Answer()

exten => blacklist,1,Verbose(2, is a blacklist num)
;same => n,Gosub(sub-oml-queuelog) loguar blacklist
same => n,Set(BLACKLIST=1)
same => n,Gosub(sub-oml-hangup,s,1)




; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML    BRIDGE CALL ACTIONS      OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML    BRIDGE CALL ACTIONS      OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML    BRIDGE CALL ACTIONS      OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[sub-oml-queue-inbound-connect-agent]
; Subrutina que se dispara cada vez que un agente atiende una llamada de cola Inbound
; Es invocada por los canales SIP/XXXX (de agentes), cuando éstos atienden una llamada Inbound

include => sub-oml-queue-inbound-connect-agent-custom

exten => s,1,Verbose(2, voy a queueloguear que se atendio una llamada inbound)
same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(inboundCall))

same => n,Set(__OMLCAMPID=${SIP_HEADER(Idcamp)})

same => n,Set(__OMLCAMPTYPE=${DB(OML/CAMP/${OMLCAMPID}/TYPE)})
same => n,Set(__OMLCAMPQNAME=${DB(OML/CAMP/${OMLCAMPID}/QNAME)})
same => n,Set(__OMLCALLTYPEID=3)
same => n,Set(__OMLAGENTSIP=${MEMBERINTERFACE:4})
same => n,Set(__OMLAGENTNAME=${MEMBERNAME})
same => n,Set(__OMLCODCLI=${SIP_HEADER(IDCliente)})
same => n,Set(__OMLAGENTID=${CUT(MEMBERNAME,_,1)})
same => n,Set(__OMLOUTNUM=${SIP_HEADER(OMLOUTNUM)})

same => n,Set(__OMLCALLSTATUS=CONNECT)
same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZERO}])
same => n,Set(__OMLANSWERTIMESTAMP=${EPOCH})
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CONNECT)
same => n,Set(SHARED(OMLCALLWAITDURATION,${OMLMOTHERCHAN})=${OMLCALLWAITDURATION})
same => n,Set(SHARED(OMLANSWERTIMESTAMP,${OMLMOTHERCHAN})=${OMLANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${OMLMOTHERCHAN})=${OMLAGENTID})

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},,,call))
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=ONCALL-${CUT(OMLCAMPQNAME,_,2)}:${EPOCH})
same => n,Return()

[sub-oml-queue-dialer-connect-agent]
; Subrutina que se dispara cada vez que un agente atiende una llamada de cola Dialer
; Es invocada por los canales SIP/XXXX (de agentes), cuando éstos atienden una llamada Dialer

include => sub-oml-queue-dialer-connect-agent-custom

exten => s,1,Verbose(2, voy a queueloguear que se atendio una llamada dialer)
same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(dialerCall))

same => n,Set(__OMLCAMPID=${SIP_HEADER(Idcamp)})
same => n,Set(__OMLCAMPTYPE=${DB(OML/CAMP/${OMLCAMPID}/TYPE)})
same => n,Set(__OMLCAMPQNAME=${DB(OML/CAMP/${OMLCAMPID}/QNAME)})
same => n,Set(__OMLCALLTYPEID=2)
same => n,Set(__OMLAGENTSIP=${MEMBERINTERFACE:4})
same => n,Set(__OMLAGENTNAME=${MEMBERNAME})
same => n,Set(__OMLCODCLI=${SIP_HEADER(IDCliente)})
same => n,Set(__OMLAGENTID=${CUT(MEMBERNAME,_,1)})
same => n,Set(__OMLOUTNUM=${SIP_HEADER(OMLOUTNUM)})

same => n,Set(__OMLCALLSTATUS=CONNECT)
same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZERO}])
same => n,Set(__OMLANSWERTIMESTAMP=${EPOCH})

same => n,Set(SHARED(OMLCALLSTATUS,${OMLDIALERDIALOUTCHAN})=CONNECT)
same => n,Set(SHARED(OMLCALLWAITDURATION,${OMLDIALERDIALOUTCHAN})=${OMLCALLWAITDURATION})
same => n,Set(SHARED(OMLANSWERTIMESTAMP,${OMLDIALERDIALOUTCHAN})=${OMLANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${OMLDIALERDIALOUTCHAN})=${OMLAGENTID})

same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CONNECT)
same => n,Set(SHARED(OMLCALLWAITDURATION,${OMLMOTHERCHAN})=${OMLCALLWAITDURATION})
same => n,Set(SHARED(OMLANSWERTIMESTAMP,${OMLMOTHERCHAN})=${OMLANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${OMLMOTHERCHAN})=${OMLAGENTID})

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},CONNECT,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},,,call))
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=ONCALL-${CUT(OMLCAMPQNAME,_,2)}:${EPOCH})
same => n,Return()

[macro-oml-outcall-connect]
; Macro ejecutada cada vez que una llamada hacia afuera de OML es atendida
; Esta macro es invocada por canales tipo: channel-1 (SIP/provider/XXXXXXXX)
; ${OMLUNIQUEID}^${OMLAGENTID}^${OMLCAMPQNAME}^${OMLMOTHERCHAN}^${OMLYEARZERO}^${OMLMANUALCALLTYPEID}^${OMLAGENTSIP}

exten => s,1,Verbose(2, "Macro: oml-outcall-connect UNIQUEID:${ARG1} GR:${ARG2} Q:${ARG3} A:${ARG4} E:${ARG5}")
same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-1,s,1(${OMLCALLTYPE}))

same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCAMPID},camp))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCODCLI},client))

same => n,Set(__OMLMOTHERCHAN=${ARG4})
same => n,Set(__OMLANSWERTIMESTAMP=${EPOCH})
same => n,Set(SHARED(OMLANSWERTIMESTAMP,${OMLMOTHERCHAN})=${OMLANSWERTIMESTAMP})
same => n,Set(__OMLCALLSTATUS=ANSWER)
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=ANSWER)
same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${ARG5}])
same => n,Set(SHARED(OMLCALLWAITDURATION,${OMLMOTHERCHAN})=${OMLCALLWAITDURATION})
same => n,Goto(${OMLCALLTYPE})
same => n,Gosub(sub-oml-hangup,s,1(macro-oml-outcall-connect - FAIL))


same => n(manualCall),Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=ONCALL-${CUT(OMLCAMPQNAME,_,2)}:${EPOCH})
same => n,Set(__OMLMOTHERCHAN=${CHANNEL})
same => n,Set(SHARED(OMLMOTHERCHAN,${OMLAGENTCHAN})=${OMLMOTHERCHAN})
same => n,Set(SHARED(OMLCALLSTATUS,${OMLAGENTCHAN})=ANSWER)
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=ANSWER)
same => n,Set(SHARED(OMLAGENTID,${OMLAGENTCHAN})=${OMLAGENTID})
same => n,Set(SHARED(OMLAGENTID,${OMLMOTHERCHAN})=${OMLAGENTID})
same => n,Set(SHARED(OMLCALLWAITDURATION,${OMLMOTHERCHAN})=${OMLCALLWAITDURATION})
same => n,Set(SHARED(OMLANSWERTIMESTAMP,${OMLMOTHERCHAN})=${OMLANSWERTIMESTAMP})
same => n,Gosub(sub-oml-rec-check,s,1)
same => n,GotoIf($["${OMLRECTHISCALL}" == "1"]?recManualCall)
same => n,Goto(queueLog)
same => n(recManualCall),Gosub(sub-oml-rec-filename,s,1(${OMLUNIQUEID},manualCall))
same => n,MixMonitor(${OMLRECDIR}/${OMLRECFILENAME}.wav,b)
same => n,Goto(queueLog)


same => n(dialerCall),Gosub(sub-oml-amd,s,1(${OMLCAMPID}))
same => n,Goto(queueLog)


same => n(previewCall),Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=ONCALL-${CUT(OMLCAMPQNAME,_,2)}:${EPOCH})
same => n,Gosub(sub-oml-amd,s,1(${OMLCAMPID}))
same => n,Goto(queueLog)

same => n(click2Call),Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=ONCALL-${CUT(OMLCAMPQNAME,_,2)}:${EPOCH})
same => n,Gosub(sub-oml-amd,s,1(${OMLCAMPID}))
same => n,Goto(queueLog)


same => n(queueLog),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${ARG1},${OMLAGENTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},,,call))
same => n,Verbose(2, "Macro oml-outcall-connect terminating" )


[sub-oml-internalcall-connect]
; subrutina ejecutada por dos tipos de acciones: por un lado cuando se conecta una llamada desde un Dial hacia un agente
; por el otro cuando se conecta una llamada de un Queue hacia un agente

exten => s,1,Verbose(2, internal call connect - sub-oml-internalcall-connect - Type: ${ARG1})
same => n,Goto(${ARG1})


; queue call connect - queue call connect - queue call connect - queue call connect - queue call connect
same => n(internalQueueCallDst),Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(internalQueueCallDst))
same => n,Set(__OMLCAMPID=${SIP_HEADER(Idcamp)})
same => n,Set(__OMLCAMPTYPE=${DB(OML/CAMP/${OMLCAMPID}/TYPE)})
same => n,Set(__OMLCAMPQNAME=${DB(OML/CAMP/${OMLCAMPID}/QNAME)})
same => n,Set(__OMLCALLTYPEID=7)
same => n,Set(__OMLAGENTSIP=${MEMBERINTERFACE:4})
same => n,Set(__OMLAGENTNAME=${MEMBERNAME})
same => n,Set(__OMLCODCLI=${SIP_HEADER(IDCliente)})
same => n,Set(__OMLAGENTIDCALLED=${CUT(MEMBERNAME,_,1)})
same => n,Set(__OMLOUTNUM=${SIP_HEADER(OMLOUTNUM)})

same => n,Set(NOW=${EPOCH})
same => n,Set(WD=$[${NOW} - ${GLOBAL(${OMLOUTNUM}enterqueue)}])
same => n,Set(GLOBAL(${OMLOUTNUM})=A)
same => n,Set(GLOBAL(${OMLOUTNUM}ans)=${NOW})  ; se actualiza la variable ${GM}ans con el timestamp en que se atendió "el dial"

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${UNIQUEID},${OMLAGENTIDCALLED},CONNECT,${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},${WD},,,call))
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=ONCALL:${EPOCH})
same => n,Set(DB(OML/AGENT/${OMLAGENTIDCALLED}/STATUS)=ONCALL:${EPOCH})
same => n,Set(__OMLQATTEND=1)
same => n,Return()


; internal call connect - internal call connect - internal call connect - internal call connect - internal call connect
same => n(internalAgentCallDst),Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(internalAgentCallDst))

same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=ONCALL:${EPOCH})
same => n,Set(DB(OML/AGENT/${OMLAGENTIDCALLED}/STATUS)=ONCALL:${EPOCH})

same => n,Set(NOW=${EPOCH})
same => n,Set(WD=$[${NOW} - ${ST}])
same => n,Set(GLOBAL(${GM})=A)
same => n,Set(GLOBAL(${GM}ans)=${NOW})

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${UNIQUEID},${OMLAGENTID},ANSWER,${OMLAGENTSIPCALLED},${OMLCODCLI},7,${OMLCAMPTYPE},${WD},,,call))
same => n,Return()


; preview SIP/XXXX chan connect - preview SIP/XXXX chan connect - preview SIP/XXXX chan connect - preview SIP/XXXX chan connect
same => n(previewCall),Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(previewCall))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCAMPID},camp))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCODCLI},client))
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=DIALING:${EPOCH})

same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CONNECT-AGENT)
same => n,Set(SHARED(OMLAGENTID,${OMLMOTHERCHAN})=${OMLAGENTID})

same => n,Return()


; click2call SIP/XXXX chan connect - preview SIP/XXXX chan connect - preview SIP/XXXX chan connect - preview SIP/XXXX chan connect
same => n(click2Call),Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(click2Call))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLAGENTID},agent))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCAMPID},camp))
same => n,Gosub(sub-oml-set-chanvars,s,1(${OMLCODCLI},client))
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=DIALING:${EPOCH})

same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CONNECT-AGENT)
same => n,Set(SHARED(OMLAGENTID,${OMLMOTHERCHAN})=${OMLAGENTID})

same => n,Return()

[sub-oml-blind-transfer-agent-connect]
; subrutina ejecutada cuando se atiende una llamada transferida un Agente, desde otro Agente (SIP/agente-que-recibe-transfer)
; ARG1 -> UNIQUEID | ARG2 -> OMLAGENTID | ARG3 -> OMLCAMPQNAME | ARG4 -> OMLAGENTNAME | ARG5 -> OMLYEARZEROTRANSFER | ARG6 -> OMLCALLTYPEID | ARG7 -> OMLAGENTSIP o OMLOUTNUM
; ARG8 -> OMLTRANSFERID | ARG9 -> OMLCALLTYPEID

exten => s,1,Verbose(2, sub-oml-blind-transfer-agent-connect -> ${CHANNEL} - ${ARG7})

same => n,Set(DB(OML/AGENT/${OMLAGENTTRANSFERDSTID}/STATUS)=ONCALL-${CUT(OMLCAMPQNAME,_,2)}:${EPOCH})

same => n,Set(__OMLCALLSTATUS=BT-ANSWER)
same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${ARG5}])
same => n,Set(__OMLTRANSFERANSWERTIMESTAMP=${EPOCH})

same => n,Set(SHARED(OMLCALLSTATUS,${ARG4})=BT-ANSWER)
same => n,Set(SHARED(OMLCALLWAITDURATION,${ARG4})=${OMLCALLWAITDURATION})
same => n,Set(SHARED(OMLTRANSFERANSWERTIMESTAMP,${ARG4})=${OMLTRANSFERANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${ARG4})=${OMLAGENTID})

same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(ag2agBlindTransferDst))
same => n(queueLog),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${ARG1},${OMLAGENTTRANSFERDSTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${ARG8},${ARG9},${OMLCALLWAITDURATION},,,call))
same => n,Return()


[sub-oml-consult-transfer-agent-connect]
; subrutina ejecutada cuando se atiende una llamada transferida un Agente, desde otro Agente
; sub-oml-consult-transfer-agent-connect^${OMLUNIQUEID}^${OMLAGENTID}^${OMLCAMPQNAME}^${OMLMOTHERCHAN}^${OMLYEARZEROTRANSFER}^${TRANSFERID}^${OMLCAMPTYPE}
; ARG1 -> UNIQUEID | ARG2 -> OMLAGENTID | ARG3 -> OMLCAMPQNAME | ARG4 -> OMLMOTHERCHAN | ARG5 -> OMLYEARZEROTRANSFER | ARG6 -> OMLCALLTYPEID | ARG7 -> OMLCAMPTYPE


exten => s,1,Verbose(2, OMLUNIQUEID:${ARG1} OMLAGENTID:${ARG2} OMLCAMPQNAME:${ARG3} OMLMOTHERCHAN:${ARG4})
same => n,Verbose(2, OMLYEARZEROTRANSFER:${ARG5} TRANSFERID:${ARG6} OMLCAMPTYPEID:${ARG7})

same => n,Set(DB(OML/AGENT/${OMLAGENTTRANSFERDSTID}/STATUS)=ONCALL-${CUT(OMLCAMPQNAME,_,2)}:${EPOCH})

same => n,Set(__OMLCALLSTATUS=CT-ANSWER)
same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${ARG5}])
same => n,Set(__OMLTRANSFERANSWERTIMESTAMP=${EPOCH})

same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CT-ANSWER)
same => n,Set(SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})=${OMLCALLWAITDURATION})
same => n,Set(SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})=${OMLTRANSFERANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${OMLMOTHERCHAN})=${OMLAGENTID})
same => n,Set(SHARED(OMLAGENTTRANSFERID,${OMLMOTHERCHAN})=${OMLAGENTTRANSFERDSTID})

same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(ag2agConsultTransferDst))
same => n(queueLog),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${ARG1},${OMLAGENTTRANSFERDSTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${ARG6},${ARG7},${OMLCALLWAITDURATION},,,call))
same => n,Verbose(2, "Macro oml-consult-transfer-agent-connect terminating" )


[macro-oml-blind-transfer-outcall-connect]
;${OMLUNIQUEID}^${OMLAGENTID}^${OMLCAMPQNAME}^${OMLMOTHERCHAN}^${OMLYEARZEROTRANSFER}^${OMLCAMPTYPE}^${OMLOUTNUMTRANSFER}

exten => s,1,Verbose(2, sub-oml-blind-transfer-outnum-connect -> ${CHANNEL} - ${ARG7})

same => n,Set(__OMLCALLSTATUS=BTOUT-ANSWER)
same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${ARG5}])
same => n,Set(__OMLTRANSFERANSWERTIMESTAMP=${EPOCH})

same => n,Set(SHARED(OMLCALLSTATUS,${ARG4})=${OMLCALLSTATUS})
same => n,Set(SHARED(OMLCALLWAITDURATION,${ARG4})=${OMLCALLWAITDURATION})
same => n,Set(SHARED(OMLTRANSFERANSWERTIMESTAMP,${ARG4})=${OMLTRANSFERANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${ARG4})=${OMLAGENTID})

same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-1,s,1(ag2OutBlindTransferDst))
same => n(queueLog),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${ARG1},${ARG7},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},9,${ARG6},${OMLCALLWAITDURATION},,,call))
same => n,Verbose(2, "Macro oml-blind-transfer-outcall-connect terminating" )

[macro-oml-consult-transfer-outcall-connect]
;${OMLUNIQUEID}^${OMLAGENTID}^${OMLCAMPQNAME}^${OMLMOTHERCHAN}^${OMLYEARZEROTRANSFER}^${OMLCAMPTYPE}^${OMLOUTNUMTRANSFER}

exten => s,1,Verbose(2, sub-oml-consult-transfer-outnum-connect -> ${CHANNEL} - ${ARG7})

same => n,Set(__OMLCALLSTATUS=CTOUT-ANSWER)
same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${ARG5}])
same => n,Set(__OMLTRANSFERANSWERTIMESTAMP=${EPOCH})

same => n,Set(SHARED(OMLCALLSTATUS,${ARG4})=${OMLCALLSTATUS})
same => n,Set(SHARED(OMLCALLTRANSFERWAITDURATION,${ARG4})=${OMLCALLWAITDURATION})
same => n,Set(SHARED(OMLTRANSFERANSWERTIMESTAMP,${ARG4})=${OMLTRANSFERANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${ARG4})=${OMLAGENTID})
same => n,Set(SHARED(OMLOUTNUMTRANSFER,${ARG4})=${ARG7})

same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(ag2agConsultTransferDst))
same => n(queueLog),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${ARG1},${ARG7},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},9,${ARG6},${OMLCALLWAITDURATION},,,call))
same => n,Verbose(2, "Macro oml-consult-transfer-outcall-connect terminating" )

[sub-oml-camp-transfer-connect]
; subrutina ejecutada cuando se atiende una llamada transferida una canpaña, desde un Agente
; Es invocada por los canales SIP/XXXX (de agentes), cuando éstos atienden una llamada transferida

include => sub-oml-camp-transfer-connect-custom

exten => s,1,Verbose(2, voy a queueloguear que se atendio una Queue de transferencia)
same => n,Set(CHANNEL(hangup_handler_push)=sub-oml-post-call-channel-2,s,1(ag2CampTransferDst))
;same => n,Set(__OMLCALLTYPEID=8)

;same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${GLOBAL(CAMPT)}])  		; el tiempo de ring es timestamp actual - el timestamp del momento del "transfer"
same => n,Set(__OMLCAMPTYPE=${DB(OML/CAMP/${OMLCAMPID}/TYPE)})
same => n,Set(__OMLCAMPQNAME=${DB(OML/CAMP/${OMLCAMPID}/QNAME)})
same => n,Set(__OMLAGENTTRANSFERSIP=${MEMBERINTERFACE:4})
same => n,Set(__OMLAGENTNAME=${MEMBERNAME})
same => n,Set(__OMLCODCLI=${SIP_HEADER(IDCliente)})
same => n,Set(__OMLAGENTTRANSFERID=${CUT(MEMBERNAME,_,1)})
same => n,Set(__OMLOUTNUM=${SIP_HEADER(OMLOUTNUM)})

same => n,Set(__OMLCALLSTATUS=CAMPT-ANSWER)
;same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${}])
same => n,Set(__OMLTRANSFERANSWERTIMESTAMP=${EPOCH})

;OMLAGENTTRANSFERID
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=${OMLCALLSTATUS})
same => n,Set(SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})=${OMLTRANSFERANSWERTIMESTAMP})
same => n,Set(SHARED(OMLAGENTID,${OMLMOTHERCHAN})=${OMLAGENTID})
same => n,Set(SHARED(OMLAGENTTRANSFERID,${OMLMOTHERCHAN})=${OMLAGENTTRANSFERID})

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID}-${OMLAGENTTRANSFERID},CAMPT-COMPLETE,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Set(__OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,Set(SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})=${OMLCALLWAITDURATION})
;same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTTRANSFERID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},,,call))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPTRANSFERID},${OMLUNIQUEID},${OMLAGENTTRANSFERID},CONNECT,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},3,${OMLCALLWAITDURATION},,,call))
same => n,Set(DB(OML/AGENT/${OMLAGENTTRANSFERID}/STATUS)=ONCALL-${CUT(OMLCAMPQNAME,_,2)}:${EPOCH})
same => n,Return()



; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         POST CALL CHANNELS DIALPLAN         OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         POST CALL CHANNELS DIALPLAN         OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML         POST CALL CHANNELS DIALPLAN         OML OML OML OML OML OML OML OML OML
; OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML OML

[sub-oml-post-call-channel-1]
; Subrutina de postcall invocada por canales SIP/provider/XXXX
; ARG1 es el tipo de llamada/canal
include => sub-oml-post-call-channel-1-custom

exten => s,1,Verbose(2, Diferentes en la vida, los hombres son semejantes en la muerte - CHANNEL1)
same => n,Goto(${ARG1})
same => n,Gosub(sub-oml-hangup,s,1)


; manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall
; manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall
; en la manual call, CHANNEL-1 no hace nada
same => n(manualCall),Verbose(2, CHANNEL-1 postcall inboundCall -  ${SHARED(OMLCALLSTATUS,${CHANNEL})})
same => n,StopMixMonitor(${OMLRECFILENAME}.wav)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "BT"]?manualcBlindTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CT"]?manualcConsultTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CAMPT"]?manualcCampTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "BTOUT"]?manualcBlindTransferOutCall)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CTOUT"]?manualcConsultTransferOutCall)

; la llamada manual fue atendida por el destino
same => n(manualcAttend),Verbose(2, manual call attend)
same => n,Set(OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${CHANNEL})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLANSWERTIMESTAMP,${CHANNEL})}])
same => n,GotoIf($["${OMLRECTHISCALL}" != "1"]?queueLog)

same => n,StopMixMonitor(${OMLRECFILENAME}.wav)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})

same => n(queueLog),Set(RANDOM=${RANDOM(1,2)})
same => n,ExecIf($["${RANDOM}" == "1"]?Set(COMPLETE=COMPLETEAGENT):Set(COMPLETE=COMPLETECALLER))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

; transferencias transferencias manualcall
; tratamiento post-call de llamadas manual transferidas de manera ciega hacia otro agente
same => n(manualcBlindTransfer),Verbose(2, ${CHANNEL} muere en una BT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" != "BT-ANSWER"]?manualbtUnanswer:manualbtAnswer)

same => n(manualbtUnanswer),Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,ExecIf($["${OMLCALLSTATUS}" == "BT-TRY"]?Set(OMLCALLSTATUS=BT-ABANDON))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTTRANSFERDSTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(manualbtAnswer),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${CHANNEL})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} -  ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${CHANNEL})}])
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-BT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTTRANSFERDSTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas manual transferidas de manera consultativa hacia otro agente
same => n(manualcConsultTransfer),Verbose(2, ${CHANNEL} muere en una CT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "CT-ACCEPT"]?manualcCtAccept)

same => n,Goto(manualcAttend)

same => n(manualcCtAccept),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLAGENTID=${SHARED(OMLAGENTTRANSFERID,${OMLMOTHERCHAN})})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-CT)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCAMPID},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas manual transferidas a otra campaña
same => n(manualcCampTransfer),GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "CAMPT-ANSWER"]?manualcCamptAnswer)

same => n(campTransferFail),Verbose(2, campTransfer Fail)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},CAMPT-FAIL,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,GotoIf($["${QUEUESTATUS}" == "TIMEOUT"]?manualcCampTransferExpire)
same => n,GotoIf($["${ABANDONED}" == "TRUE"]?manualcCampTransferAbandon)

same => n(manualcCampTransferExpire),Verbose(2, TIMEOUT queue dialer call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPTRANSFERID},${OMLUNIQUEID},,EXITWITHTIMEOUT,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},,${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))

same => n(manualcCampTransferAbandon),Verbose(2, ABANDON queue dialer call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPTRANSFERID},${OMLUNIQUEID},,ABANDON,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},,${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))

same => n(manualcCamptAnswer),Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLCALLWAITDURATION=${SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})})
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Set(__OMLAGENTID=${CUT(MEMBERNAME,_,1)})
same => n,Set(__OMLCAMPIDTRANSFER=${OMLCAMPTRANSFERID})
same => n,Set(__OMLCAMPTYPE=3)

same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-CAMPT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPIDTRANSFER},${OMLUNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))

; tratamiento post-call de llamadas Inbound transferidas de manera ciega hacia un trunk externo
same => n(manualcBlindTransferOutCall),Verbose(2, ${CHANNEL} muere en una BT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" != "BTOUT-ANSWER"]?manualcBtOutUnanswer:manualcBtOutAnswer)

same => n(manualcBtOutUnanswer),Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,ExecIf($["${OMLCALLSTATUS}" == "BT-TRY"]?Set(OMLCALLSTATUS=BT-ABANDON))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLOUTNUMTRANSFER},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(manualcBtOutAnswer),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${CHANNEL})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} -  ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${CHANNEL})}])
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-BTOUT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLOUTNUMTRANSFER},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas Inbound transferidas de manera consultativa hacia un trunk externo
same => n(manualcConsultTransferOutCall),Verbose(2, ${CHANNEL} muere en una CT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "CTOUT-ACCEPT"]?manualcCtOutAccept)

same => n,Goto(manualcAttend)

same => n(manualcCtOutAccept),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLAGENTID=${SHARED(OMLAGENTTRANSFERID,${OMLMOTHERCHAN})})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-CTOUT)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCAMPID},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${SHARED(OMLOUTNUMTRANSFER,${CHANNEL})},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))





; dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall
; dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall
; en las dialer call CHANNEL-1 no hace nada, salvo que haya sido un AMD entonces ahí hace un queuelog
same => n(dialerCall),Verbose(2, CHANNEL-1 postcall dialerCall)
same => n,GotoIf($["${OMLAMD}" == "1"]?dialerAMD)
same => n,Gosub(sub-oml-hangup,s,1)
same => n(dialerAMD),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},AMD,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},,,,call))
same => n,Gosub(sub-oml-hangup,s,1)


; inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall
; inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall
; en las inbound call CHANNEL-1 postcall dispara el QueueLog RESULT
; stop mixmonitor y agi grabaciones
same => n(inboundCall),Verbose(2, CHANNEL-1 postcall inboundCall -  ${SHARED(OMLCALLSTATUS,${CHANNEL})})
same => n,StopMixMonitor(${OMLRECFILENAME}.wav)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "BT"]?blindTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CT"]?consultTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CAMPT"]?campTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "BTOUT"]?blindTransferOutCall)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CTOUT"]?consultTransferOutCall)
same => n,GotoIf($["${QUEUESTATUS}" == "TIMEOUT"]?inboundExpire)
same => n,GotoIf($["${ABANDONED}" == "TRUE"]?inboundAbandon)
same => n,Goto(inboundAttend)

; la llamada inbound expiro
same => n(inboundExpire),Verbose(2, TIMEOUT queue inbound call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZERO}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},EXITWITHTIMEOUT,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},,call))
same => n,Gosub(sub-oml-hangup,s,1)

; la llamada inbound fue un abandono
same => n(inboundAbandon),Verbose(2, ABANDON queue inbound call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZERO}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},ABANDON,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},,call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING: inboundAbandon Call))

; la llamada inbound fue atendida por un agente
same => n(inboundAttend),Verbose(2, inbound attend)
same => n,Set(OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${CHANNEL})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLANSWERTIMESTAMP,${CHANNEL})}])
same => n,GotoIf($["${OMLRECTHISCALL}" != "1"]?queueLog)

same => n,StopMixMonitor(${OMLRECFILENAME}.wav)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${SHARED(OMLAGENTID,${CHANNEL})},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})

same => n(queueLog),Set(OMLAGENTID=${CUT(MEMBERNAME,_,1)})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,ExecIf($["${RANDOM}" == "1"]?Set(COMPLETE=COMPLETEAGENT):Set(COMPLETE=COMPLETECALLER))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

; transferencias transferencias inbound
; tratamiento post-call de llamadas Inbound transferidas de manera ciega hacia otro agente
same => n(blindTransfer),Verbose(2, ${CHANNEL} muere en una BT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" != "BT-ANSWER"]?btUnanswer:btAnswer)

same => n(btUnanswer),Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,ExecIf($["${OMLCALLSTATUS}" == "BT-TRY"]?Set(OMLCALLSTATUS=BT-ABANDON))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTTRANSFERDSTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(btAnswer),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${CHANNEL})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} -  ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${CHANNEL})}])
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-BT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTTRANSFERDSTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas Inbound transferidas de manera consultativa hacia otro agente
same => n(consultTransfer),Verbose(2, ${CHANNEL} muere en una CT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "CT-ACCEPT"]?ctAccept)

same => n,Goto(inboundAttend)

same => n(ctAccept),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLAGENTID=${SHARED(OMLAGENTTRANSFERID,${OMLMOTHERCHAN})})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-CT)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCAMPID},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas Inbound transferidas a otra campaña
same => n(campTransfer),GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "CAMPT-ANSWER"]?camptAnswer)

same => n(campTransferFail),Verbose(2, campTransfer Fail)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},CAMPT-FAIL,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,GotoIf($["${QUEUESTATUS}" == "TIMEOUT"]?campTransferExpire)
same => n,GotoIf($["${ABANDONED}" == "TRUE"]?campTransferAbandon)

same => n(campTransferExpire),Verbose(2, TIMEOUT queue dialer call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPTRANSFERID},${OMLUNIQUEID},,EXITWITHTIMEOUT,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},,${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(campTransferAbandon),Verbose(2, ABANDON queue dialer call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPTRANSFERID},${OMLUNIQUEID},,ABANDON,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},,${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))

same => n(camptAnswer),Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLCALLWAITDURATION=${SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})})
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Set(__OMLAGENTID=${CUT(MEMBERNAME,_,1)})
same => n,Set(__OMLCAMPIDTRANSFER=${OMLCAMPTRANSFERID})
same => n,Set(__OMLCAMPTYPE=3)

same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-CAMPT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPIDTRANSFER},${OMLUNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))

; tratamiento post-call de llamadas Inbound transferidas de manera ciega hacia un trunk externo
same => n(blindTransferOutCall),Verbose(2, ${CHANNEL} muere en una BT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" != "BTOUT-ANSWER"]?btOutUnanswer:btOutAnswer)

same => n(btOutUnanswer),Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,ExecIf($["${OMLCALLSTATUS}" == "BTOUT-TRY"]?Set(OMLCALLSTATUS=BTOUT-ABANDON))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLOUTNUMTRANSFER},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(btOutAnswer),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${CHANNEL})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} -  ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${CHANNEL})}])
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-BTOUT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLOUTNUMTRANSFER},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas Inbound transferidas de manera consultativa hacia un trunk externo
same => n(consultTransferOutCall),Verbose(2, ${CHANNEL} muere en una CT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "CTOUT-ACCEPT"]?ctOutAccept)

same => n,Goto(inboundAttend)

same => n(ctOutAccept),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLAGENTID=${SHARED(OMLAGENTTRANSFERID,${OMLMOTHERCHAN})})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-CTOUT)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCAMPID},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${SHARED(OMLOUTNUMTRANSFER,${CHANNEL})},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))



; previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall
; previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall
same => n(previewCall),Verbose(2, CHANNEL-1 postcall previewCall)
same => n,Gosub(sub-oml-hangup,s,1)




[sub-oml-post-call-channel-2]
; Subrutina de postcall invocada por canales SIP/XXXX (canales de agente)
; El ARG1 indica el tipo de llamada/canal
include => sub-oml-post-call-channel-2-custom

exten => s,1,Verbose(2, Diferentes en la vida, los hombres son semejantes en la muerte - CHANNEL2)
same => n,Verbose(2, CDR(duration): ${CDR(duration)} - CDR(billsec): ${CDR(billsec)})
same => n,Goto(${ARG1})
same => n,Gosub(sub-oml-hangup,s,1)


; manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall
; manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall - manualCall
; en las manual call, CHANNEL-2 escribe el QueueLog Result y disparan el AGI grabaciones
same => n(manualCall),Verbose(2, CHANNEL-2 postcall manualCall - ${DIALSTATUS})
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=READY:${EPOCH})
same => n,StopMixMonitor(${OMLRECFILENAME}.wav)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})}" == "ANSWER"]?manualCallAnswer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CT"]?consultTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CTOUT"]?consultTransferOutCall)

same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZERO}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${DIALSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},,,call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(manualCallAnswer),Gosub(sub-oml-hangup,s,1)

same => n(consultTransfer),Gosub(sub-oml-hangup,s,1)

same => n(consultTransferOutCall),Gosub(sub-oml-hangup,s,1)

; dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall
; dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall - dialerCall
; en las dialer call, CHANNEL-2 actualiza el status del agente que atendio la llamada y nada más, salvo que ....
; el canal haya muerto por una transferencia, entonces se hace un QueueLog para registrar la misma
same => n(dialerCall),Verbose(2, CHANNEL-2 postcall dialerCall)
same => n,Set(OMLUNIQUEID=${SHARED(OMLAGENTID,${OMLMOTHERCHAN})})
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=READY:${EPOCH})
same => n,Gosub(sub-oml-hangup,s,1)

;same => n(dialerTransfer),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},TRANSFER,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},,,,call))
;same => n,Gosub(sub-oml-hangup,s,1)

; inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall
; inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall - inboundCall
; en las inbound call, CHANNEL-2 actualiza el status del agente que atendio la llamada y nada más, salvo que ....
; el canal haya muerto por una transferencia, entonces se hace un QueueLog para registrar la misma
same => n(inboundCall),Verbose(2, CHANNEL-2 postcall inboundCall)
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=READY:${EPOCH})
same => n,Gosub(sub-oml-hangup,s,1)


; previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall
; previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall - previewCall
; en las preview call, CHANNEL-2 actualiza el status del agente que atendio la llamada y nada más, salvo que ....
; el canal haya muerto por una transferencia, entonces se hace un QueueLog para registrar la misma
same => n(previewCall),Verbose(2, CHANNEL-2 postcall previewCall)
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=READY:${EPOCH})
same => n,Gosub(sub-oml-hangup,s,1)


; internalCall - internalCall - internalCall - internalCall - internalCall - internalCall - internalCall - internalCall - internalCall - internalCall - internalCall - internalCall - internalCall
; internalCall - internalCall - internalCall - internalCall - internalCall - internalCall - internalCall - internalCall - internalCall - internalCall - internalCall - internalCall - internalCall
; canal caller de una llamada de agente a agente
same => n(internalAgentCallSrc),Verbose(2, CHANNEL-2 postcall internalCaller)
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=READY:${EPOCH})
same => n,Verbose(2, duration ${CDR(duration)} - billsec ${CDR(billsec)})
;same => n,Set(OMLCALLWAITDURATION=$[${GLOBAL(${GM}ans)} - ${ST}])
;same => n,Set(OMLCALLDURATION=$[${EPOCH} - ${GLOBAL(${GM}ans)}])
same => n,GotoIf($["${DIALSTATUS}" != "ANSWER"]?noAnswer)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${UNIQUEID},${OMLAGENTID},COMPLETE,${OMLAGENTSIPCALLED},${OMLCODCLI},7,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},,call))
same => n,Gosub(sub-oml-hangup,s,1)
same => n(noAnswer),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${UNIQUEID},${OMLAGENTID},${DIALSTATUS},${OMLAGENTSIPCALLED},${OMLCODCLI},7,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},,call))
same => n,Gosub(sub-oml-hangup,s,1)

; canal called de una llamada de agente a agente
same => n(internalAgentCallDst),Verbose(2, CHANNEL-2 postcall internalCalled)
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=READY:${EPOCH})
same => n,Verbose(2, transfer ${BLINDTRANSFER})
same => n,GotoIf($["${BLINDTRANSFER}" != ""]?dialerTransfer)
same => n,Gosub(sub-oml-hangup,s,1)
same => n(dialerTransfer),Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},TRANSFER,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},,,,call))
same => n,Gosub(sub-oml-hangup,s,1)

; canal caller (SIP/XXXXX) de una llamada de agente a Campaña
same => n(internalQueueCallSrc),Verbose(2, CHANNEL-2 postcall internalQueueCaller)
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=READY:${EPOCH})
same => n,GotoIf($["${QUEUESTATUS}" == "TIMEOUT"]?internalQueueSrcExpire)
same => n,GotoIf($["${ABANDONED}" == "TRUE"]?internalQueueSrcAbandon)
same => n,Goto(internalQueueSrcAttend)
; internalCall expiro
same => n(internalQueueSrcExpire),Verbose(2, TIMEOUT queue internalQueueCaller call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${GLOBAL(${DM}enterqueue)}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${UNIQUEID},${OMLAGENTID},EXITWITHTIMEOUT,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},,call))
same => n,UserEvent(AgentComplete,Queue: ${OMLCAMPQNAME},TalkTime: ${CT},Channel: ${CHANNEL})
same => n,Gosub(sub-oml-hangup,s,1)
; internalCall fue un abandono
same => n(internalQueueSrcAbandon),Verbose(2, ABANDON queue internalQueueCaller call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${GLOBAL(${DM}enterqueue)}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${UNIQUEID},${OMLAGENTID},ABANDON,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},,call))
same => n,UserEvent(AgentComplete,Queue: ${OMLCAMPQNAME},TalkTime: ${CT},Channel: ${CHANNEL})
same => n,Gosub(sub-oml-hangup,s,1)
; internalCall atendida por un agente
same => n(internalQueueSrcAttend),Set(OMLAGENTID=${CUT(MEMBERNAME,_,1)})
same => n,Set(OMLCALLWAITDURATION=$[${GLOBAL(${DM}ans)} - ${GLOBAL(${DM}enterqueue)}])
same => n,Set(OMLCALLDURATION=$[${EPOCH} - ${GLOBAL(${DM}ans)}])
same => n,Set(COMPLETE=${IF($["${CAUSECOMPLETE}" = "C"]?COMPLETECALLER:COMPLETEAGENT)})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${UNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},,call))
same => n,Gosub(sub-oml-hangup,s,1)

; transferCall - transferCall - transferCall - transferCall - transferCall - transferCall - transferCall - transferCall - transferCall - transferCall - transferCall - transferCall - transferCall
; transferCall - transferCall - transferCall - transferCall - transferCall - transferCall - transferCall - transferCall - transferCall - transferCall - transferCall - transferCall - transferCall
; canal called (SIP/XXXX) de una llamada de agente a Campaña
same => n(ag2CampTransferDst),Verbose(2, CHANNEL-2 postcall ag2CampTransferDst)
same => n,Set(__OMLAGENTID=${CUT(CALLERID(name),_,1)})
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=READY:${EPOCH})
same => n,Gosub(sub-oml-hangup,s,1)

; post call sobre agente que transfirió una llamada a otro agente
same => n(ag2agBlindTransferSrc),Verbose(2, CHANNEL-2 postcall transferAgent2Agent)
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=READY:${EPOCH})
same => n,Gosub(sub-oml-hangup,s,1)

; post call sobre agente que recibió una transferencia de llamada
same => n(ag2agBlindTransferDst),Verbose(2, CHANNEL-2 postcall transferAgent2Agent)
;same => n,Set(OMLAGENTSIPAUX=${CUT(CHANNEL,/,2})
;same => n,Set(OMLAGENTSIP=${CUT(OMLAGENTSIPAUX,-,1)})
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=READY:${EPOCH})
same => n,Gosub(sub-oml-hangup,s,1)

; post call sobre un agente que recibió una transferencia consultativa
same => n(ag2agConsultTransferDst),Verbose(2, CHANNEL-2 postcall transferAgent2Agent)
same => n,Set(DB(OML/AGENT/${OMLAGENTID}/STATUS)=READY:${EPOCH})
same => n,Gosub(sub-oml-hangup,s,1)


; post call para canal auxiliar en transferencia consultativa AG2AG
same => n(ag2agConsultTransferAux),Verbose(2, CHANNEL-2 postcall ag2agConsultTransferAux)

same => n(consultTransferAuxContinue),GotoIf($["${DIALSTATUS}" != "ANSWER"]?notAnswerTransfer)
same => n,GotoIf($["${RTPAUDIOQOSRTTBRIDGED}" != ""]?notBridgeTransfer)

same => n,Verbose(2, transferencia aceptada)
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CT-ACCEPT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTTRANSFERDSTID},CT-ACCEPT,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},,,,call))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},CT-COMPLETE,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${SHARED(OMLRECFILENAME,${OMLMOTHERCHAN})},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(notBridgeTransfer),Verbose(2, transferencia no aceptada)
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CT-DISCARD)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTTRANSFERDSTID},CT-DISCARD,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},,,,call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(notAnswerTransfer),Verbose(2, transferencia no atendida)
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CT-${DIALSTATUS})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTTRANSFERDSTID},CT-${DIALSTATUS},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},,,,call))
same => n,Gosub(sub-oml-hangup,s,1)


; post call para canal auxiliar en transferencia consultativa AG2OUT
same => n(ag2OutConsultTransferAux),Verbose(2, CHANNEL-2 postcall ag2OutConsultTransferAux)

same => n,GotoIf($["${DIALSTATUS}" != "ANSWER"]?ag2OutBlindTransferFail)
same => n,GotoIf($["${RTPAUDIOQOSRTTBRIDGED}" != ""]?ag2OutBlindTransferDiscard)

same => n,Verbose(2, transferencia aceptada)
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CTOUT-ACCEPT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLOUTNUMTRANSFER},CTOUT-ACCEPT,${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},,,,call))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},CTOUT-COMPLETE,${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${SHARED(OMLRECFILENAME,${OMLMOTHERCHAN})},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(ag2OutBlindTransferDiscard),Verbose(2, transferencia no aceptada)
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CTOUT-DISCARD)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLOUTNUMTRANSFER},CTOUT-DISCARD,${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},,,,call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(ag2OutBlindTransferFail),Verbose(2, transferencia no atendida)
same => n,Set(SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})=CTOUT-${DIALSTATUS})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLOUTNUMTRANSFER},CTOUT-${DIALSTATUS},${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},,,,call))
same => n,Gosub(sub-oml-hangup,s,1)



[sub-oml-post-call-channel-3]
; Subrutina de postcall invocada por canales Local/XXXX.......;2 (WD Originate Channel) - OML ---> Dial(SIP/trunk/XXXXXXX)
; Por ahora solo tiene sentido en dialer ya que estos canales solamente serian generados en ese escenario
include => sub-oml-post-call-channel-3-custom

exten => s,1,Verbose(2, Diferentes en la vida, los hombres son semejantes en la muerte - CHANNEL3)
same => n,Verbose(2, CDR(duration): ${CDR(duration)} - CDR(billsec): ${CDR(billsec)} - ${OMLUNIQUEID})
same => n,GotoIf($["${DIALSTATUS}" != "ANSWER"]?queueLogNoAnswer)
same => n,GotoIf($["${ANSWEREDTIME}" == ""]?hangup)
same => n,Gosub(sub-oml-hangup,s,1)

same => n(queueLogNoAnswer),Set(OMLCALLWAITDURATION=${CDR(duration)})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},dialer-dialout,${DIALSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},,call))
same => n(hangup),Gosub(sub-oml-hangup,s,1)




[sub-oml-post-call-channel-4]
; Subrutina de postcall invocada por canales Local/XXXX.......;1 (WD Originate Context "Terminal")
; en las dialer, CHANNEL-4 cierra el QueueLog con el resultado de la Queue() y ejecuta el AGI omni-grabaciones.php - Agent <---- Queue()

include => sub-oml-post-call-channel-4-custom

exten => s,1,Verbose(2, Diferentes en la vida, los hombres son semejantes en la muerte - CHANNEL4)
same => n,Set(OMLAGENTID=${CUT(MEMBERNAME,_,1)})

same => n,Verbose(2, check resultado de llamada DIALSTATUS - ${SHARED(OMLCALLSTATUS,${CHANNEL})})

same => n,StopMixMonitor(${OMLRECFILENAME}.wav)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "BT"]?blindTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CT"]?consultTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CAMPT"]?campTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "BTOUT"]?blindTransferOutCall)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CTOUT"]?consultTransferOutCall)
same => n,GotoIf($["${QUEUESTATUS}" == "TIMEOUT"]?dialerExpire)
same => n,GotoIf($["${ABANDONED}" == "TRUE"]?dialerAbandon)

; la llamada fue gestionada por un agente
same => n,GotoIf($["${OMLAMD}" == "1"]?dialerAmd)
same => n,GotoIf($["${QUEUESTATUS}" == "TIMEOUT"]?dialerExpire)
same => n,GotoIf($["${ABANDONED}" == "TRUE"]?dialerAbandon)
same => n,Goto(dialerAttend)

;la llamada fue descartada por AMD
same => n(dialerAmd),Verbose(2, AMD post-call)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},,AMD,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},,call))
same => n,Gosub(sub-oml-hangup,s,1)

; la llamada dialer fue atendida por un agente
same => n(dialerAttend),StopMixMonitor(${OMLRECFILENAME}.wav)
same => n,Set(OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${CHANNEL})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLANSWERTIMESTAMP,${CHANNEL})}])
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,ExecIf($["${RANDOM}" == "1"]?Set(COMPLETE=COMPLETEAGENT):Set(COMPLETE=COMPLETECALLER))
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

; la llamada dialer expiro
same => n(dialerExpire),Verbose(2, TIMEOUT queue dialer call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZERO}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},,EXITWITHTIMEOUT,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},,,call))
same => n,UserEvent(AgentComplete,Queue: ${OMLCAMPQNAME},TalkTime: ${CT},Channel: ${CHANNEL})
same => n,Gosub(sub-oml-hangup,s,1)

; la llamada dialer fue un abandono
same => n(dialerAbandon),Verbose(2, ABANDON queue dialer call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZERO}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},,ABANDON,${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},,,call))
same => n,UserEvent(AgentComplete,Queue: ${OMLCAMPQNAME},TalkTime: ${CT},Channel: ${CHANNEL})
same => n,Gosub(sub-oml-hangup,s,1)


; tratamiento post-call de llamadas Dialer transferidas de manera ciega hacia otro agente
same => n(blindTransfer),Verbose(2, ${CHANNEL} muere en una BT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" != "BT-ANSWER"]?btUnanswer:btAnswer)

same => n(btUnanswer),Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,ExecIf($["${OMLCALLSTATUS}" == "BT-TRY"]?Set(OMLCALLSTATUS=BT-ABANDON))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTTRANSFERDSTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(btAnswer),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${CHANNEL})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} -  ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${CHANNEL})}])
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-BT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTTRANSFERDSTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas Dialer transferidas de manera consultativa hacia otro agente
same => n(consultTransfer),Verbose(2, ${CHANNEL} muere en una CT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "CT-ACCEPT"]?ctAccept)

same => n,Goto(dialerAttend)

same => n(ctAccept),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLAGENTID=${SHARED(OMLAGENTTRANSFERID,${OMLMOTHERCHAN})})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-CT)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCAMPID},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))

; tratamiento post-call de llamadas Dialer transferidas a otra campaña
same => n(campTransfer),GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "CAMPT-ANSWER"]?camptAnswer)

same => n(campTransferFail),Verbose(2, campTransfer Fail)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},CAMPT-FAIL,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,GotoIf($["${QUEUESTATUS}" == "TIMEOUT"]?campTransferExpire)
same => n,GotoIf($["${ABANDONED}" == "TRUE"]?campTransferAbandon)

same => n(campTransferExpire),Verbose(2, TIMEOUT queue dialer call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPTRANSFERID},${OMLUNIQUEID},,EXITWITHTIMEOUT,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},,${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(campTransferAbandon),Verbose(2, ABANDON queue dialer call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPTRANSFERID},${OMLUNIQUEID},,ABANDON,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},,${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))

same => n(camptAnswer),Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLCALLWAITDURATION=${SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})})
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Set(__OMLAGENTID=${CUT(MEMBERNAME,_,1)})
same => n,Set(__OMLCAMPIDTRANSFER=${OMLCAMPTRANSFERID})
same => n,Set(__OMLCAMPTYPE=3)

same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-CAMPT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPIDTRANSFER},${OMLUNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas Dialer transferidas de manera ciega hacia un trunk externo
same => n(blindTransferOutCall),Verbose(2, ${CHANNEL} muere en una BT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" != "BTOUT-ANSWER"]?btOutUnanswer:btOutAnswer)

same => n(btOutUnanswer),Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,ExecIf($["${OMLCALLSTATUS}" == "BTOUT-TRY"]?Set(OMLCALLSTATUS=BTOUT-ABANDON))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLOUTNUMTRANSFER},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(btOutAnswer),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${CHANNEL})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} -  ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${CHANNEL})}])
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-BTOUT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLOUTNUMTRANSFER},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas Dialer transferidas de manera consultativa hacia un trunk externo
same => n(consultTransferOutCall),Verbose(2, ${CHANNEL} muere en una CT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "CTOUT-ACCEPT"]?ctOutAccept)

same => n,Goto(dialerAttend)

same => n(ctOutAccept),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLAGENTID=${SHARED(OMLAGENTTRANSFERID,${OMLMOTHERCHAN})})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-CTOUT)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCAMPID},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${SHARED(OMLOUTNUMTRANSFER,${CHANNEL})},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))



[sub-oml-post-call-channel-5]
; Subrutina de postcall invocada por canales Local/1002@click2call-00000037;1 - Es el canal que dispara el Dial(SIP/trunk/XXXXXXXX) - OML ----> DIAL(SIP/trunk/OUTNUM)

include => sub-oml-post-call-channel-5-custom

exten => s,1,Verbose(2, Diferentes en la vida, los hombres son semejantes en la muerte - CHANNEL5)
same => n,Verbose(2, OML ----preview---> DIAL(SIP/trunk/OUTNUM)  | ${GLOBAL(${OMLAGENTSIP}result)})
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))



[sub-oml-post-call-channel-6]
; Subrutina de postcall invocada por canales Local/1002@click2call-00000037;2 - Es el canal que dispara el Dial(SIP/1XXX) - AGENT <----- OML

include => sub-oml-post-call-channel-6-custom

exten => s,1,Verbose(2, Diferentes en la vida, los hombres son semejantes en la muerte - CHANNEL5)
same => n,Verbose(2, AGENT <---preview---- OML  | ${SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})})

;same => n,Set(OMLCALLWAITDURATION=$[${GLOBAL(${OMLAGENTSIP}ans)} - ${GLOBAL(ST)}])
same => n,GotoIf($["${OMLCAMPREC}" != "True"]?checkResult)
same => n,StopMixMonitor(${OMLRECFILENAME}.wav)

same => n(checkResult),Verbose(2, check resultado de llamada DIALSTATUS: ${SHARED(OMLCALLSTATUS,${CHANNEL})} - ${OMLCALLSTATUS})
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "ANSWER"]?answer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "BT"]?blindTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CT"]?consultTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CAMPT"]?campTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "BTOUT"]?blindTransferOutCall)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CTOUT"]?consultTransferOutCall)

same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZERO}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${SHARED(OMLCALLSTATUS,${CHANNEL})},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},,,call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(answer),Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${OMLMOTHERCHAN})})
same => n,GotoIf($["${OMLRECTHISCALL}" != "1"]?queueLogPreviewCall)

same => n,StopMixMonitor(${OMLRECFILENAME}.wav)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})

same => n(queueLogPreviewCall),Set(RANDOM=${RANDOM(1,2)})
same => n,ExecIf($["${RANDOM}" == "1"]?Set(COMPLETE=COMPLETEAGENT):Set(COMPLETE=COMPLETECALLER))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)


same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZERO}])

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},,call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas Preview transferidas de manera ciega hacia otro agente
same => n(blindTransfer),Verbose(2, ${CHANNEL} muere en una BT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" != "BT-ANSWER"]?btUnanswer:btAnswer)

same => n(btUnanswer),Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,ExecIf($["${OMLCALLSTATUS}" == "BT-TRY"]?Set(OMLCALLSTATUS=BT-ABANDON))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTTRANSFERDSTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(btAnswer),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${CHANNEL})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} -  ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${CHANNEL})}])
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-BT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTTRANSFERDSTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas Preview transferidas de manera consultativa hacia otro agente
same => n(consultTransfer),Verbose(2, ${CHANNEL} muere en una CT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "CT-ACCEPT"]?ctAccept)

same => n,Goto(answer)

same => n(ctAccept),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLAGENTID=${SHARED(OMLAGENTTRANSFERID,${OMLMOTHERCHAN})})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-CT)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCAMPID},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas Preview transferidas a otra campaña
same => n(campTransfer),GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "CAMPT-ANSWER"]?camptAnswer)

same => n(campTransferFail),Verbose(2, campTransfer Fail)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},CAMPT-FAIL,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,GotoIf($["${QUEUESTATUS}" == "TIMEOUT"]?campTransferExpire)
same => n,GotoIf($["${ABANDONED}" == "TRUE"]?campTransferAbandon)

same => n(campTransferExpire),Verbose(2, TIMEOUT queue dialer call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPTRANSFERID},${OMLUNIQUEID},,EXITWITHTIMEOUT,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},,${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(campTransferAbandon),Verbose(2, ABANDON queue dialer call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPTRANSFERID},${OMLUNIQUEID},,ABANDON,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},,${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))

same => n(camptAnswer),Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLCALLWAITDURATION=${SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})})
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Set(__OMLAGENTID=${CUT(MEMBERNAME,_,1)})
same => n,Set(__OMLCAMPIDTRANSFER=${OMLCAMPTRANSFERID})
same => n,Set(__OMLCAMPTYPE=3)

same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-CAMPT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPIDTRANSFER},${OMLUNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas Preview transferidas de manera ciega hacia un trunk externo
same => n(blindTransferOutCall),Verbose(2, ${CHANNEL} muere en una BT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" != "BTOUT-ANSWER"]?btOutUnanswer:btOutAnswer)

same => n(btOutUnanswer),Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,ExecIf($["${OMLCALLSTATUS}" == "BTOUT-TRY"]?Set(OMLCALLSTATUS=BTOUT-ABANDON))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLOUTNUMTRANSFER},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(btOutAnswer),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${CHANNEL})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} -  ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${CHANNEL})}])
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-BTOUT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLOUTNUMTRANSFER},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas Preview transferidas de manera consultativa hacia un trunk externo
same => n(consultTransferOutCall),Verbose(2, ${CHANNEL} muere en una CT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "CTOUT-ACCEPT"]?ctOutAccept)

same => n,Goto(answer)

same => n(ctOutAccept),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLAGENTID=${SHARED(OMLAGENTTRANSFERID,${OMLMOTHERCHAN})})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-CTOUT)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCAMPID},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${SHARED(OMLOUTNUMTRANSFER,${CHANNEL})},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))




[sub-oml-post-call-channel-7]
; Subrutina de postcall invocada por canales Local/1002@click2call-00000037;2 - Es el canal que dispara el Dial(SIP/1XXX) - AGENT <----- OML en llamadas CLICK2CALL

include => sub-oml-post-call-channel-6-custom

exten => s,1,Verbose(2, Diferentes en la vida, los hombres son semejantes en la muerte - CHANNEL5)
same => n,Verbose(2, AGENT <---click2call---- OML  | ${SHARED(OMLCALLSTATUS,${OMLMOTHERCHAN})})

;same => n,Set(OMLCALLWAITDURATION=$[${GLOBAL(${OMLAGENTSIP}ans)} - ${GLOBAL(ST)}])
same => n,GotoIf($["${OMLCAMPREC}" != "True"]?checkResult)
same => n,StopMixMonitor(${OMLRECFILENAME}.wav)

same => n(checkResult),Verbose(2, check resultado de llamada DIALSTATUS: ${SHARED(OMLCALLSTATUS,${CHANNEL})} - ${OMLCALLSTATUS})
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "ANSWER"]?answer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "BT"]?blindTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CT"]?consultTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CAMPT"]?campTransfer)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "BTOUT"]?blindTransferOutCall)
same => n,GotoIf($["${CUT(SHARED(OMLCALLSTATUS,${CHANNEL}),-,1)}" == "CTOUT"]?consultTransferOutCall)

same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZERO}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${SHARED(OMLCALLSTATUS,${CHANNEL})},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},,,call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(answer),Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${OMLMOTHERCHAN})})
same => n,GotoIf($["${OMLRECTHISCALL}" != "1"]?queueLogPreviewCall)

same => n,StopMixMonitor(${OMLRECFILENAME}.wav)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})

same => n(queueLogPreviewCall),Set(RANDOM=${RANDOM(1,2)})
same => n,ExecIf($["${RANDOM}" == "1"]?Set(COMPLETE=COMPLETEAGENT):Set(COMPLETE=COMPLETECALLER))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)


same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZERO}])

same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},,call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas click2Call transferidas de manera ciega hacia otro agente
same => n(blindTransfer),Verbose(2, ${CHANNEL} muere en una BT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" != "BT-ANSWER"]?btUnanswer:btAnswer)

same => n(btUnanswer),Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,ExecIf($["${OMLCALLSTATUS}" == "BT-TRY"]?Set(OMLCALLSTATUS=BT-ABANDON))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTTRANSFERDSTID},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(btAnswer),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${CHANNEL})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} -  ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${CHANNEL})}])
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-BT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTTRANSFERDSTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas click2Call transferidas de manera consultativa hacia otro agente
same => n(consultTransfer),Verbose(2, ${CHANNEL} muere en una CT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "CT-ACCEPT"]?ctAccept)

same => n,Goto(answer)

same => n(ctAccept),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLAGENTID=${SHARED(OMLAGENTTRANSFERID,${OMLMOTHERCHAN})})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-CT)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCAMPID},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas click2Call transferidas a otra campaña
same => n(campTransfer),GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "CAMPT-ANSWER"]?camptAnswer)

same => n(campTransferFail),Verbose(2, campTransfer Fail)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLAGENTID},CAMPT-FAIL,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,GotoIf($["${QUEUESTATUS}" == "TIMEOUT"]?campTransferExpire)
same => n,GotoIf($["${ABANDONED}" == "TRUE"]?campTransferAbandon)

same => n(campTransferExpire),Verbose(2, TIMEOUT queue dialer call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPTRANSFERID},${OMLUNIQUEID},,EXITWITHTIMEOUT,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},,${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(campTransferAbandon),Verbose(2, ABANDON queue dialer call)
same => n,Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPTRANSFERID},${OMLUNIQUEID},,ABANDON,${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},,${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))

same => n(camptAnswer),Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLCALLWAITDURATION=${SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})})
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Set(__OMLAGENTID=${CUT(MEMBERNAME,_,1)})
same => n,Set(__OMLCAMPIDTRANSFER=${OMLCAMPTRANSFERID})
same => n,Set(__OMLCAMPTYPE=3)

same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-CAMPT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPIDTRANSFER},${OMLUNIQUEID},${OMLAGENTID},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},8,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas click2Call transferidas de manera ciega hacia un trunk externo
same => n(blindTransferOutCall),Verbose(2, ${CHANNEL} muere en una BT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" != "BTOUT-ANSWER"]?btOutUnanswer:btOutAnswer)

same => n(btOutUnanswer),Set(OMLCALLWAITDURATION=$[${EPOCH} - ${OMLYEARZEROTRANSFER}])
same => n,ExecIf($["${OMLCALLSTATUS}" == "BTOUT-TRY"]?Set(OMLCALLSTATUS=BTOUT-ABANDON))
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLOUTNUMTRANSFER},${OMLCALLSTATUS},${OMLOUTNUM},${OMLCODCLI},${OMLCALLTYPEID},${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1)

same => n(btOutAnswer),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLWAITDURATION,${CHANNEL})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} -  ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${CHANNEL})}])
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCODCLI},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-BTOUT)
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${OMLOUTNUMTRANSFER},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))


; tratamiento post-call de llamadas click2Call transferidas de manera consultativa hacia un trunk externo
same => n(consultTransferOutCall),Verbose(2, ${CHANNEL} muere en una CT)
same => n,GotoIf($["${SHARED(OMLCALLSTATUS,${CHANNEL})}" == "CTOUT-ACCEPT"]?ctOutAccept)

same => n,Goto(answer)

same => n(ctOutAccept),Set(OMLCALLWAITDURATION=${SHARED(OMLCALLTRANSFERWAITDURATION,${OMLMOTHERCHAN})})
same => n,Set(OMLCALLDURATION=$[${EPOCH} - ${SHARED(OMLTRANSFERANSWERTIMESTAMP,${OMLMOTHERCHAN})}])
same => n,Set(OMLAGENTID=${SHARED(OMLAGENTTRANSFERID,${OMLMOTHERCHAN})})
same => n,Set(RANDOM=${RANDOM(1,2)})
same => n,Set(COMPLETE=COMPLETE-CTOUT)
same => n,AGI(omni-grabaciones.php,${OMLCALLTYPEID},${OMLCAMPID},${OMLOUTNUM},${OMLRECFILENAME},${OMLAGENTID},${OMLCAMPID},${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)},${OMLUNIQUEID},${OMLCALLDURATION})
same => n,Gosub(sub-oml-queuelog,s,1(${OMLCAMPID},${OMLUNIQUEID},${SHARED(OMLOUTNUMTRANSFER,${CHANNEL})},${COMPLETE},${OMLOUTNUM},${OMLCODCLI},9,${OMLCAMPTYPE},${OMLCALLWAITDURATION},${OMLCALLDURATION},${OMLRECFILENAME},call))
same => n,Gosub(sub-oml-hangup,s,1(NORMAL CLEARING - ${CONTEXT}))
