---

#----------------------------------------------------------------------
# Directorios bÃ¡sicos
#----------------------------------------------------------------------

- name: Create the required directories
  file: path={{item}} state=directory owner=ftsender mode=0755
  sudo: yes
  # /home/ftsender es incluido xq el permiso por default (0700) hace que
  # Nginx NO puda leer archivos estaticos y de media
  # TODO: la seguridad podria mejorarse moviendo statics y media a otro
  #   directorio fuera de /home
  with_items:
    - /etc/ftsender/asterisk
    - /home/ftsender
    - /home/ftsender/.pip
    - /home/ftsender/deploy
    - /home/ftsender/deploy/bin
    - /home/ftsender/deploy/app
    - /home/ftsender/deploy/local
    - /home/ftsender/deploy/media_root
    - /home/ftsender/deploy/static_root
    - /home/ftsender/deploy/log
    - /home/ftsender/deploy/run
  tags:
    - deploy

#----------------------------------------------------------------------
# pip / virtualenv
#----------------------------------------------------------------------

- name: Setup pip
  ini_file: >
    dest=/home/ftsender/.pip/pip.conf
    section=install
    option='download-cache'
    value='/home/ftsender/.pip/cache'
  tags:
    - virtualenv

- name: Upload built (rsync to /app)
  # Copies xxx/app to /home/ftsender/deploy/app (/app on dest is implicit)
  synchronize: >
    src={{BUILD_DIR}}
    dest=/home/ftsender/deploy
    delete=yes checksum=yes times=no
  tags:
    - deploy
    - quick_deploy

- name: Setup virtualenv
  pip: >
    requirements=/home/ftsender/deploy/app/requirements.txt
    virtualenv=/home/ftsender/deploy/virtualenv
    virtualenv_site_packages=no
  environment:
    PATH: /usr/pgsql-9.3/bin:{{ lookup('env', 'PATH') }}
  tags:
    - virtualenv

- name: Check - StarPy instalado 
  shell: find /home/ftsender/deploy/virtualenv -name starpy | grep -q starpy
  register: starpy_installed
  ignore_errors: True
  tags:
    - virtualenv

- name: Install starpy
  pip: name={{ STARPY_PIP_URL }} virtualenv=/home/ftsender/deploy/virtualenv
  when: starpy_installed|failed
  tags:
    - virtualenv

#----------------------------------------------------------------------
# Deploy
#----------------------------------------------------------------------

- name: Upload fts_web_settings_local.py
  template: src=fts_web_settings_local.py dest=/home/ftsender/deploy/local
  tags:
    - deploy
    - quick_deploy
    - update_settings

- name: Run Django syncdb
  django_manage: >
      command=syncdb
      app_path=/home/ftsender/deploy/app
      settings=fts_web.settings
      virtualenv=/home/ftsender/deploy/virtualenv
  environment:
    PYTHONPATH: '/home/ftsender/deploy/app:/home/ftsender/deploy/local'
  tags:
    - deploy

- name: Run Django migrations
  django_manage: >
      command=migrate
      app_path=/home/ftsender/deploy/app
      settings=fts_web.settings
      virtualenv=/home/ftsender/deploy/virtualenv
  environment:
    PYTHONPATH: '/home/ftsender/deploy/app:/home/ftsender/deploy/local'
  tags:
    - deploy
    - quick_deploy

- name: Run Django collectstatic
  django_manage: >
      command=collectstatic
      app_path=/home/ftsender/deploy/app
      settings=fts_web.settings
      virtualenv=/home/ftsender/deploy/virtualenv
  environment:
    PYTHONPATH: '/home/ftsender/deploy/app:/home/ftsender/deploy/local'
  tags:
    - deploy
    - quick_deploy

- name: Upload ftsender_uwsgi.ini
  template: src=ftsender_uwsgi.ini dest=/home/ftsender/deploy/local
  tags:
    - deploy

- name: Upload FTSender init script
  template: >
    src=etc/init.d/ftsender-daemon
    dest=/etc/init.d/ftsender-daemon
    owner=root group=root mode=0755
  sudo: yes
  tags:
    - deploy

- name: Register FTSenser service
  service: name=ftsender-daemon enabled=yes
  sudo: yes
  tags:
    - deploy

- name: Upload scripts to deploy/bin
  template: src={{item}} dest=/home/ftsender/deploy/bin mode=0755
  with_items:
    - run_uwsgi.sh
    - manage.sh
    - bin/db_update_plpython_stored_proc.sh
  tags:
    - deploy

- name: Install stored procedures
  shell: >
    /home/ftsender/deploy/bin/db_update_plpython_stored_proc.sh
    /home/ftsender/deploy/app/fts_web/sql/plpython/*.sql
  tags:
    - deploy

- name: Reload FTSenser service
  service: name=ftsender-daemon state=reloaded
  sudo: yes
  tags:
    - deploy
    - quick_deploy
    - update_settings

#----------------------------------------------------------------------
# Checks
#----------------------------------------------------------------------

- name: Run ftsdaemon_checks
  command: /home/ftsender/deploy/bin/manage.sh ftsdaemon_checks
  register: ftsdaemon_checks_output
  tags:
    - deploy
    - quick_deploy
    - update_settings
  ignore_errors: True

- name: Print output of ftsdaemon_checks
  debug: msg="{{ ftsdaemon_checks_output.stdout }}"
  when: ftsdaemon_checks_output|failed
  tags:
    - deploy
    - quick_deploy
    - update_settings
