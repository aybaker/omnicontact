
[from_test_server]

;--------------------------------------------------------------------------------
; 1- ATENDEMOS, 'HOLA MUNDO'
;     X: cant. tiempo de espera en segs (para contestar)
;     Y: cuantas veces repetirlo (default=1)
;--------------------------------------------------------------------------------
exten => _1X!,1,NoOp(Nro: 1X / X: cant. tiempo de espera en segs (para contestar) / Y: repeticiones)
      same => n,Set(WaitToAnswer=$[${EXTEN:1:1} * 1000])
      same => n,Set(Repeat=0${EXTEN:2})
      same => n,NoOp( - WaitToAnswer: ${WaitToAnswer} (ms))
      same => n,NoOp( - Repeat: ${Repeat})
      same => n,Answer(${WaitToAnswer})
      same => n(playback),Playback(hello-world)
      same => n,GotoIf($[${Repeat} > 0]?repeat)
      same => n,Hangup()
      same => n(repeat),Set(Repeat=$[${Repeat}-1])
      same => n,Wait(1)
      same => n,Goto(playback)

;--------------------------------------------------------------------------------
; 2- ATENDEMOS, ENVIAMOS DTMF
;     X: cant. tiempo de espera en segs (para contestar)
;     Y: DTMF a enviar
;--------------------------------------------------------------------------------
exten => _2XX!,1,NoOp(Nro: 2XY / X: cant. tiempo de espera en segs. / Y: DTMF a enviar)
      same => n,Set(WaitToAnswer=$[${EXTEN:1:1} * 1000])
      same => n,Set(DtmfToSend=${EXTEN:2:1})
      same => n,NoOp( - WaitToAnswer: ${WaitToAnswer} (ms))
      same => n,NoOp( - DtmfToSend: ${DtmfToSend})
      same => n,Answer(${WaitToAnswer})
      same => n,Wait(1)
      same => n,SendDTMF(${DtmfToSend})
      same => n,Wait(1)
      same => n,Hangup()

;--------------------------------------------------------------------------------
; 3- NO CONTESTAMOS
;--------------------------------------------------------------------------------
exten => _3!,1,NoOp(Opcion 3: no contestamos)
      same => n(justwait),Wait(60) ; esperamos 1 minuto, y logueamos si todavia continua intentando...
      same => n,Log(WARNING, Parece que el otro lado no corto, aun cuando no contestamos despues de un largo tiempo)
      same => n,Goto(justwait)
      same => n,Hangup()

;--------------------------------------------------------------------------------
; 4- OCUPADO
;--------------------------------------------------------------------------------
exten => _4!,1,NoOp(Opcion 4: devolvemos ocuapdo)
      same => n,Busy(5)
      same => n,Hangup()

;--------------------------------------------------------------------------------
; 5- -> Extension donde se enganchar llamadas salientes
;--------------------------------------------------------------------------------
exten => _5X!,1,NoOp(El otro extremo ha contestado)
     same => n,Set(FtsDaemonCallId=${EXTEN:1})
     same => n,AGI(agi://0.0.0.0/${FtsDaemonCallId}/ha-contestado)
     same => n,Wait(5)
     same => n(inicio),NoOp(La conexion ${FtsDaemonCallId} todavia esta activa)
     same => n,Wait(30)
     same => n,Goto(inicio)
     same => n,Hangup()

;--------------------------------------------------------------------------------
; 6- ATENDEMOS, CORTAMOS DESPUES DE UN TIEMPO
;     X: tiempo de espera antes de cortar
;--------------------------------------------------------------------------------
exten => _6X!,1,NoOp(Nro: 6X / X: tiempo de espera antes de cortar)
      same => n,Set(WaitToHangup=${EXTEN:1})
      same => n,NoOp( - WaitToHangup: ${WaitToHangup})
      same => n,Answer()
      same => n,Wait(${WaitToHangup})
      same => n,NoOp(Hanging up after a wait of ${WaitToHangup} secs.)
      same => n,Hangup()

;--------------------------------------------------------------------------------
; 7- RULETA! a veces atiende y corta, a veces no atiende, a veces da ocupado
;--------------------------------------------------------------------------------
exten => _7X!,1,NoOp(Nro: 7)
      same => n,GotoIf($[${RAND(1,100)} > 85]?busy)
      same => n,GotoIf($[${RAND(1,100)} > 85]?wait)
      ; -----
      same => n(answer),NoOp(7 -> answer)
      same => n,Answer()
      same => n,Wait(5)
      same => n,Hangup()
      ; -----
      same => n(busy),NoOp(7 -> busy)
      same => n,Busy(5)
      same => n,Hangup()
      ; -----
      same => n(wait),NoOp(7 -> wait)
      same => n,Wait(999)
      same => n,Hangup()

;--------------------------------------------------------------------------------
; 9- SACAMOS LLAMADA POR IAX2 QUE DA ERROR XQ NO EXISTE
;--------------------------------------------------------------------------------

exten => _9!,1,NoOp(Opcion 9: intentamos cx a IAX2 que no existe)
     same => n,Dial(IAX2/asterisk-err/1234567890,10,g)
     same => n,NoOp( - DIALSTATUS: ${DIALSTATUS})
     same => n,NoOp( - DIALEDTIME: ${DIALEDTIME})
     same => n,NoOp( - ANSWEREDTIME: ${ANSWEREDTIME})
     same => n,Hangup()

;--------------------------------------------------------------------------------
; 0- SACAMOS LLAMADA POR IAX2
;--------------------------------------------------------------------------------
exten => _0X!,1,NoOp(Opcion 0: conectamos a otro Asterisk)
     same => n,Set(CallToNumber=${EXTEN:1})
     same => n,NoOp( - CallToNumber: ${CallToNumber})
     same => n,Dial(IAX2/${NEXT_IAX2}/${CallToNumber},10,g)
     same => n,NoOp(El otro lado ha colago)
     same => n,NoOp( - DIALSTATUS: ${DIALSTATUS})
     same => n,NoOp( - DIALEDTIME: ${DIALEDTIME})
     same => n,NoOp( - ANSWEREDTIME: ${ANSWEREDTIME})
     same => n,Hangup()

;--------------------------------------------------------------------------------
; 319751355727335 -> Llamando a 'SIP/test_user1'
;--------------------------------------------------------------------------------
exten => 319751355727335,1,NoOp(Llamando a 'SIP/test_user1')
     same => n,Dial(SIP/test_user1,10,g)
     same => n,NoOp(El otro lado ha colago)
     same => n,Hangup()

exten => 3572525359,1,NoOp(Llamando a 'SIP/test_user1')
     same => n,Dial(SIP/test_user1,10,g)
     same => n,NoOp(El otro lado ha colago)
     same => n,Hangup()

;--------------------------------------------------------------------------------
; TODO LO DEMAS
;--------------------------------------------------------------------------------
exten => _X!,1,NoOp(Opcion por default - Hangup())
     same => n,Hangup()




;--------------------------------------------------------------------------------
; LOCAL CHANNEL --- FTS-dialer-local-0
;--------------------------------------------------------------------------------

[FTS-dialer-local-0]
exten => _X.,1,NoOp(FTS,INICIO,exten=${EXTEN},campana=0)
exten => _X.,n,AGI(agi://0.0.0.0/000/123456/se-va-a-realizar-llamada/)
exten => _X.,n,Dial(IAX2/172.19.1.101/319751355727335)
exten => _X.,n,AGI(agi://0.0.0.0/000/123456/dialstatus/${DIALSTATUS}/)
exten => _X.,n,Hangup()


;--------------------------------------------------------------------------------
; LOCAL CHANNEL --- FTS-dialer-local-A
;--------------------------------------------------------------------------------

[FTS-dialer-local-A]
exten => _X.,1,NoOp(FTS,INICIO,exten=${EXTEN},campana=A)
exten => _X.,n,AGI(agi://0.0.0.0/A/xxx/local/pre-dial/)
exten => _X.,n,Dial(IAX2/172.19.1.101/319751355727335,8)
exten => _X.,n,AGI(agi://0.0.0.0/A/xxx/local/post-dial/dial-status/${DIALSTATUS}/)
exten => _X.,n,Hangup()


;--------------------------------------------------------------------------------
; LOCAL CHANNEL --- FTS-dialer-local-B
;--------------------------------------------------------------------------------

[FTS-dialer-local-B]
exten => _X.,1,NoOp(FTS,INICIO,exten=${EXTEN},campana=B)
exten => _X.,n,AGI(agi://0.0.0.0/B/xxx/local/pre-dial/)
exten => _X.,n,Dial(IAX2/172.19.1.101/${EXTEN},8)
exten => _X.,n,AGI(agi://0.0.0.0/B/xxx/local/post-dial/dial-status/${DIALSTATUS}/)
exten => _X.,n,Hangup()


;--------------------------------------------------------------------------------
; LOCAL CHANNEL --- FTS-dialer-local-C
;--------------------------------------------------------------------------------

[FTS-dialer-local-C]
exten => _X.,1,NoOp(FTS,INICIO,exten=${EXTEN},campana=C)
exten => _X.,n,Set(FtsDaemonCallId=${CUT(EXTEN,,1)})
exten => _X.,n,Set(NumberToCall=${CUT(EXTEN,,2)})
exten => _X.,n,NoOp(FTS,FtsDaemonCallId=${FtsDaemonCallId},NumberToCall=${NumberToCall})
exten => _X.,n,AGI(agi://0.0.0.0/C/${FtsDaemonCallId}/local/pre-dial/)
exten => _X.,n,Dial(IAX2/172.19.1.101/${NumberToCall},8)
exten => _X.,n,AGI(agi://0.0.0.0/C/${FtsDaemonCallId}/local/post-dial/dial-status/${DIALSTATUS}/)
exten => _X.,n,Hangup()
