# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---
# Esta tarea está medio al pedo porque ya no instalamos sobre sangomaOS pero por si las dudas la dejo
- name: Apache adjustments
  shell: "{{ item }}"
  with_items:
      - sed -i 's/\(^upload_max_filesize = \).*/\120M/' /etc/php.ini
      - sed -i 's/^\(User\|Group\).*/\1 asterisk/' /etc/httpd/conf/httpd.conf
      - sed -i 's/AllowOverride None/AllowOverride All/' /etc/httpd/conf/httpd.conf
  when: asterisk_location == "" and ansible_os_family == "Sangoma"
  become: yes
  become_method: sudo

# Se crea el servicico de asterisk  para systemctl
- name: Creation of asterisk.service
  template: src=templates/asterisk.service dest=/etc/systemd/system/asterisk.service owner=root group=root mode=650
  tags: postinstall

# Linkeo el binario a /usr/sbin
- name: Create simbolic link of asterisk binarie
  file: state=link src={{ asterisk_location }}/sbin/asterisk dest=/usr/sbin/asterisk force=true
  when: asterisk_location != ""
  become: yes
  become_method: sudo

# Esto tambien está al pedo es para sangomaOS
- name: Config of asterisk-freepbx for OML
  file: "state=link src={{ install_prefix }}ominicontacto/ominicontacto_voip/asterisk-files/{{ item }} dest={{ asterisk_location }}/etc/asterisk/{{ item }} force=true owner={{ usuario }} group={{ usuario }}"
  with_items:
      - extensions_custom.conf
      - extensions_fts.conf
      - sip_custom.conf
      - extconfig.conf
      - amd.conf
      - func_odbc.conf
      - cdr_adaptive_odbc.conf
      - http_custom.conf
      - manager_custom.conf
      - queues_custom.conf
      - globals_custom.conf
      - http_custom.conf
      - pjsip.transports_custom.conf
      - res_odbc_custom.conf
  become: yes
  become_method: sudo
  when: asterisk_location == "" or ansible_os_family == "Sangoma"

# Se linkean los .conf de asterisk (los que estan afuera de archivos-no-enlaces) a /opt/omnileads/asterisk/etc/asterisk
- name: Config of asterisk for OML
  file: "state=link src={{ install_prefix }}ominicontacto/ominicontacto_voip/asterisk-files/conf/{{ item }} dest={{ asterisk_location }}/etc/asterisk/{{ item }} force=true owner={{ usuario }} group={{ usuario }} mode=755"
  with_items:
      - amd.conf
      - chan_dahdi.conf
      - extconfig.conf
      - extensions.conf
      - features.conf
      - func_odbc.conf
      - http.conf
      - indications.conf
      - logger.conf
      - manager.conf
      - modules.conf
      - musiconhold.conf
      - oml_extensions.conf
      - oml_extensions_sub.conf
      - oml_func_odbc.conf
      - oml_res_odbc.conf
      - oml_amd.conf
      - oml_dahdi.conf
      - oml_http.conf
      - oml_sip_general.conf
      - oml_sip_nat.conf
      - queues.conf
      - res_odbc.conf
      - sip.conf
      - udptl.conf
  become: yes
  become_method: sudo
  when: asterisk_location != ""
  tags: postinstall

- name: Create of oml_manager.conf
  template: src=templates/conf/oml_manager.conf dest={{ install_prefix }}ominicontacto/ominicontacto_voip/asterisk-files/conf/oml_manager.conf owner={{ usuario }} group={{ usuario }} mode=755
  tags: postinstall

# Los archivos-no-enlaces se copian a la a /etc/asterisk
- name: Copy of all asterisk config files
  shell: "cp *.conf {{ asterisk_location }}/etc/asterisk/ chdir={{ install_prefix }}ominicontacto/ominicontacto_voip/asterisk-files/conf/archivos-no-enlaces/"
  when: asterisk_location != ""

# Se copian los agis a /var/lib/asterisk/agi-bin
- name: Copy of the php agis
  copy: "src={{ install_prefix }}ominicontacto/ominicontacto_voip/asterisk-files/agis/{{ item }} dest={{ asterisk_location }}/var/lib/asterisk/agi-bin/{{ item }} mode=755 remote_src=yes owner={{ usuario }} group={{ usuario }}"
  with_items:
      - omni-asterisk-logout.php
#      - omni-blacklist.php
#      - omni-dialednum.php
      - omni-grabaciones.php
      - phpagi-asmanager.php
      - phpagi.php
  become: yes
  become_method: sudo
  tags: postinstall

# Estos dos agis los creo desde ansible
- name: Creation of the agis omni-blackist and omni-dialednum
  template: "src=templates/agi-bin/{{ item }} dest={{ asterisk_location }}/var/lib/asterisk/agi-bin/{{ item }} mode=755 owner={{ usuario }} group={{ usuario }}"
  with_items:
      - omni-blacklist.php
      - omni-dialednum.php
  become: yes
  become_method: sudo
  tags: postinstall

# Aca creo la carpeta parselog
- name: Create /usr/local/parselog
  file: dest=/usr/local/parselog state=directory mode=0755 owner={{ usuario }} group={{ usuario }}
  become: yes
  become_method: sudo
  tags: postinstall

# Creo el script de conversion lo deje en parselog por convencion heredada de asternic -- FIX ME -- mejorar el script de conversion se puede hacer mejor
- name: Link the conversor.sh file
  template: src=templates/conversor.sh dest=/usr/local/parselog/conversor.sh owner={{ usuario }} group={{ usuario }} mode=755
  when: asterisk_location != ""
  tags: postinstall

# Se añade el cron de omnileads
- name: Copy the cron-omnileads file
  template: src=templates/cron-omnileads dest=/etc/cron.d/cron-omnileads owner=root group=root
  when: asterisk_location != ""
  tags: postinstall

# Para debian toca linkear esta libreria a a /usr/lib/postgresql/9.6 es una libreria de unixODBC
- name: Link odbc librarie to postgresql libs
  file: state=link src=/usr/lib/x86_64-linux-gnu/odbc/psqlodbcw.so dest=/usr/lib/postgresql/9.6/lib/psqlodbcw.so owner=root group=root mode=700
  when: ansible_os_family == "Debian"
  become: true
  become_method: sudo
  tags: postinstall

# Creo el archivo odbcinst.ini desde ansible
- name: Creation of odbcinst.ini file
  template: src=templates/etc/odbcinst.ini dest=/etc/odbcinst.ini owner=root group=root mode=644
  become: true
  become_method: sudo
  tags: postinstall

# El odbc.ini si lo copio desde el repo, creo los directorios de sonidos y descomprimo -- FIX ME -- usar los modulos file y unarchive
- name: Copy of odbc.ini file
  copy: "src={{ install_prefix }}ominicontacto/ominicontacto_voip/asterisk-files/odbc.ini dest=/etc/ mode=755 remote_src=yes owner=root group=root"
  become: true
  become_method: sudo
  tags: postinstall

# Creo los directorios que tendran los sonidos de agentes
- name: Make of the sounds dirs
  file: state=directory path={{ asterisk_location }}/var/lib/asterisk/sounds/{{ item }} owner={{ usuario }} group={{ usuario }} mode=755
  with_items:
    - es
    - en
    - oml
  tags: postinstall

# Untareo los sonidos de agentes, que vienen desde el repo
- name: Untar the sounds for agents
  unarchive: "src={{ install_prefix }}/ominicontacto/ominicontacto_voip/asterisk-files/sounds/{{ item.source }} dest={{ asterisk_location }}/var/lib/asterisk/sounds/{{ item.dest }} remote_src=yes"
  with_items:
    - { source: "es-oml.tgz", dest: "es" }
    - { source: "en-oml.tgz", dest: "en" }
  tags: postinstall

# Añado la entrada webenabled=yes al manager.conf
- name: Add web enabled in /etc/asterisk/manager.conf
  ini_file: "path={{ asterisk_location }}/etc/asterisk/manager.conf section=general option=webenabled no_extra_spaces=yes value=yes state=present"

# Añado el webcolor=yes al asterisk.conf
- name: Add web nocolor=yes in /etc/asterisk/asterisk.conf
  ini_file: "path={{ asterisk_location }}/etc/asterisk/asterisk.conf section=options option=nocolor no_extra_spaces=yes value=yes state=present"

# Permiso de usuario a la carpeta de asterisk -- FIX ME -- usar file
- name: Set up permissions of asterisk
  shell: "{{ item }}"
  with_items:
          - "chown -R {{ usuario }}.{{ usuario }} {{ asterisk_location }}"
  when: asterisk_location != ""
  tags: postinstall
  become: yes
  become_method: sudo

# Habilito e inicio asterisk
- name: Start and enable asterisk
  command: "{{ item }}"
  with_items:
          - "systemctl daemon-reload"
          - "systemctl enable asterisk"
          - "service asterisk stop"
          - "service asterisk start"
  become: true
  become_method: sudo
  ignore_errors: yes

# Un reload de config no viene mal, no alarmarse si falla
- name: Reload of asterisk config
  shell: "asterisk -rx 'module reload'"
  become: yes
  tags: postinstall
  become_method: sudo
  ignore_errors: yes

# Añado un archivo para el logrotate -- FIX ME -- no se si está funcionando, hay que revisarlo
- name: Configuration of logrotate
  template: src=templates/omnileads dest=/etc/logrotate.d/omnileads owner=root group=root mode=644
