---
# En estas tasks se hacen tareas de segurizacion de mariadb, es como hacer un mariadb-secure no voy a explicar una por una, nunca fallan
- name: Enable MariaDB
  shell: "{{ item }}"
  with_items:
      - systemctl enable mariadb.service
      - systemctl start mariadb
  become: true
  become_method: sudo

- name: Set root Password
  mysql_user: name=root host={{ item }} password={{ mysql_root_password }} state=present
  with_items:
    - localhost
    - 127.0.0.1
    - ::1
  become: true
  become_method: sudo

- name: Reload privilege tables
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - FLUSH PRIVILEGES
  changed_when: False
  become: true
  become_method: sudo

- name: Add .my.cnf
  template: src=my.cnf.j2 dest=/etc/mysql/conf.d/my.cnf owner=root group=root mode=0600
  become: true
  become_method: sudo
  when: ansible_os_family == "Debian"

- name: Remove anonymous users
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User=''
  changed_when: False
  become: true
  become_method: sudo

- name: Disallow root login remotely
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: False
  become: true
  become_method: sudo

- name: Reload privilege tables
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - FLUSH PRIVILEGES
  changed_when: False
  become: true
  become_method: sudo

- name: Grant privileges to root mysql user
  mysql_user: name=root host=localhost login_user=root password="{{ mysql_root_password}}" priv="*.*:ALL,GRANT"
  become: true
  become_method: sudo

- name: Restart mariadb
  service: name=mariadb state=restarted enabled=yes
  become: true
  become_method: sudo
