# -*- coding: utf-8 -*-

"""
Defaults para ambientes de desarrollo.

Para utilizar estos settings, crear ``fts_web_settings_local``
(en paquete ROOT de Python) con:

    from fts_web_settings_local_dev import *  # @UnusedWildImport
    SECRET_KEY = 'xxx' # Algun valor random

    if 'USE_PG' in os.environ:
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.postgresql_psycopg2',
                'NAME': 'xxxxxxx',
                'USER': 'xxxxxxx',
                'PASSWORD': 'xxxxxxx',
                'CONN_MAX_AGE': 300,
                'ATOMIC_REQUESTS': True,
            }
        }

Y luego de eso, las customizaciones.

"""

import os

{% if desarrollo == 1 %}
DEBUG = True
{% else %}
DEBUG = False
{% endif %}
TEMPLATE_DEBUG = DEBUG

ALLOWED_HOSTS = [
    "*",
]

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 's1+*bfrvb@=k@c&9=pm!0sijjewneu5p5rojil#q+!a2y&as-4'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'HOST': '127.0.0.1',
        'PORT': 5432,
        'NAME': 'kamailio',
        'USER': 'kamailio',
        'PASSWORD': 'kamailiorw',
        'CONN_MAX_AGE': 300,
        'ATOMIC_REQUESTS': True,
    }
}

STATIC_ROOT = "{{ install_prefix }}static"
MEDIA_ROOT =    "{{ install_prefix }}media_root"

OML_OMNILEADS_IP = "{{ omni_ip }}"

# Tiempo de session en segundo por ejemplo 10 minutos=600
SESSION_COOKIE_AGE = {{ session_cookie_age }}

#  para hacer un include de este archivo
# **** RECORDAR: revisar permisos y que existan los directorios ****

OML_ASTERISK_HOSTNAME = "root@{{ localhost }}"
{% if DOCKER == "false" %}
OML_SIP_FILENAME = "{{ asterisk_location }}/etc/asterisk/oml_sip_endpoints.conf"
OML_QUEUES_FILENAME = "{{ asterisk_location }}/etc/asterisk/oml_queues.conf"
OML_RUTAS_SALIENTES_FILENAME="{{ asterisk_location }}/etc/asterisk/oml_extensions_outr.conf"
OML_ASTERISK_REMOTEPATH = "{{ asterisk_location }}/etc/asterisk/"
OML_BACKLIST_REMOTEPATH  = "{{ asterisk_location }}/var/spool/asterisk/"
OML_KAMAILIO_CMD = "kamctl mi autheph.dump_secrets |awk -F ' ' '{print $3}' |head -1"
{% else %}
OML_SIP_FILENAME = "/etc/asterisk/conf/oml_sip_endpoints.conf"
OML_QUEUES_FILENAME = "/etc/asterisk/conf/oml_queues.conf"
OML_ASTERISK_REMOTEPATH = "/etc/asterisk/conf/"
OML_RUTAS_SALIENTES_FILENAME="/etc/asterisk/conf/oml_extensions_outr.conf"
OML_BACKLIST_REMOTEPATH  = "/var/lib/docker/volumes/bin_grabaciones/_data"
OML_KAMAILIO_CMD = "docker exec -i kamailio /bin/bash/ -c \"kamctl mi autheph.dump_secrets\" |awk -F ' ' '{print $3}' |head -1"
{% endif %}

OML_KAMAILIO_LOCATION = "{{ kamailio_location }}/etc/kamailio/"

ASTERISK = {
    'AMI_USERNAME': "omnileadsami",  # Usuario para AMI
    'AMI_PASSWORD': "5_MeO_DMT",  # Password para usuario para AMI
    'HTTP_AMI_URL': "http://{{ localhost }}:7088",
}

# 'OML_RELOAD_CMD': comando a ejecutar para realizar el reload de la configuracion de Asterisk
# **** RECORDAR: revisar permisos, usuario, etc.
{% if DOCKER == "false" %}
OML_RELOAD_CMD = 'ssh root@127.0.0.1 \'/usr/sbin/asterisk -rx "core reload"\''
{% else %}
OML_RELOAD_CMD = 'sudo docker exec -i asterisk /bin/bash -c "/usr/sbin/asterisk -rx \'core reload\'"'
{% endif %}

# 'OML_GRABACIONES_URL': url donde se encuentra las grabaciones en elastix
# ejemplo "https://172.16.20.222/grabaciones"

OML_GRABACIONES_URL = "https://{{ omni_ip }}/grabaciones"

# 'OML_SUPERVISION_URL': url donde se encuentra las grabaciones en elastix
# ejemplo "http://172.16.20.222:8090/Omnisup/index.php"

OML_SUPERVISION_URL = "https://{{ omni_ip }}:10443/Omnisup/index.php?page=Detalle_Campana&supervId="

# 'OML_KAMAILIO_IP': ip donde se encuentra kamailio
# ejemplo "172.16.20.219/255.255.255.255"
OML_KAMAILIO_IP = "{{ omni_ip }}/255.255.255.255"

# 'OML_WOMBAT_URL': url donde se encuentra el discador de wombat
# ejemplo "http://192.168.95.12/wombat"

OML_WOMBAT_URL = "http://{{ omni_ip }}:8080/wombat"

# 'OML_WOMBAT_FILENAME': donde se alojara temporalmente los json de wombat
# ejemplo "http://172.16.20.222/wombat"

OML_WOMBAT_FILENAME = "{{ install_prefix }}wombat-json/"

# 'OML_WOMBAT_USER': user para conectarse con la api de WOMBAT DIALER
# "user_test"

OML_WOMBAT_USER = "demoadmin"

# 'OML_WOMBAT_PASSWORD': password para ingresar con la api de WOMBAT DIALER
# "user123"

OML_WOMBAT_PASSWORD = "demo"

_logging_output_file = os.environ.get("OML_LOGFILE", "django.log")
assert os.path.split(_logging_output_file)[0] == "",\
    "La variable de entorno OML_LOGFILE solo debe contener " +\
    "el nombre del archivo, SIN directorios."
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': ('%(asctime)-15s [%(levelname)7s] '
                '%(name)20s - %(message)s')
        },
    },
    'filters': {
    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console': {
            'level': 'ERROR',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': '{{ install_prefix }}log/{0}'.format(_logging_output_file),
            'formatter': 'verbose'
        },
    },
    'loggers': {
        '': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
        },
    },
   'django.security.DisallowedHost': {
        'handlers': ['mail_admins'],
        'level': 'CRITICAL',
        'propagate': False,
    },
}

#Defender variables
DEFENDER_BEHIND_REVERSE_PROXY = True
DEFENDER_LOGIN_FAILURE_LIMIT = 1
DEFENDER_DISABLE_IP_LOCKOUT = True
{% if DOCKER == "true" %}
DEFENDER_REDIS_URL = "redis://kamailio:6379/0"
{% endif %}
# Ubuntu (wav -> wav)
TMPL_OML_AUDIO_CONVERSOR = ["sox", "-t", "wav", "<INPUT_FILE>",
    "-r", "8k", "-c", "1", "-e", "signed-integer",
    "-t", "wav", "<OUTPUT_FILE>"]

TMPL_OML_AUDIO_CONVERSOR_EXTENSION = ".wav"

MONITORFORMAT = '{{ formato_conversion }}'

ASTERISK_AUDIO_PATH = "{{ asterisk_location }}/var/lib/asterisk/sounds/"
OML_AUDIO_FOLDER = "oml/"

CALIFICACION_REAGENDA = 'Agendado'

{% if desarrollo == 1 %}
CORS_ORIGIN_ALLOW_ALL = True
LOCAL_APPS = ['sslserver', 'django_extensions', 'corsheaders']
DJANGO_CORS_HEADERS = True
DJANGO_DEBUG_TOOLBAR = True
if DJANGO_DEBUG_TOOLBAR:
    INTERNAL_IPS = ['127.0.0.1', OML_OMNILEADS_IP]
{% else %}
LOCAL_APPS = []
DJANGO_DEBUG_TOOLBAR = False
DJANGO_CORS_HEADERS = False
if DJANGO_DEBUG_TOOLBAR:
    INTERNAL_IPS = ['127.0.0.1']
{% endif %}
    LOCAL_APPS += ['debug_toolbar']
